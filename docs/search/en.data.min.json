[{"id":0,"href":"/public/PC/wsl/","title":"WSL(Windows Subsystem for Linux) 2 導入メモ","parent":"PC Tips","content":" WSL2？ WSL2のインストール 初期設定 WindowsとWSL間のファイル共有 WSL2？ WSLはLinuxのためのWindows上の仮想環境 LinuxのツールをWindowsから使いたいときに便利 LatexのコンパイルなどはLinuxの方が速いし安定しているのでWSLでやるのがおすすめ RStudio Serverも動く 基本的にはコマンド操作だがGUIアプリも動く WSL2のインストール BIOSで仮想化支援機能を有効にする 有効になっているかどうかはVirtualCheckerで確認できる(最初から有効になっている場合もある) BIOSでの設定方法はメーカーによって異なるが，IntelだとIntel Virtualization Technology(VTx)，AMDだとAMD-VとかSVMとかいう設定項目 Windows 11では，PowerShellで以下のように入力するだけでインストールできる(仮想化支援機能の有効化は必要)。デフォルトでは，Ubuntuがインストールされる。 wsl --install 初期設定 インストールしたLinuxディストリビューションを起動する(スタートメニューにUbuntuのショートカットができているはず) 初回起動時は，設定が行われるため数分かかる 起動すると新規ユーザー名とパスワードを聞かれる(パスワードは入力しても表示されないので注意) (Linuxのシェルで)パッケージのアップデート sudo apt update sudo apt upgrade -y WindowsのコマンドプロンプトやPowerShellからLinuxのコマンドを使うには，wslコマンド，もしくはubuntu runコマンドを使う wsl ls -l ubuntu run ls -l WindowsとWSL間のファイル共有 WindowsからLinuxのファイルへアクセスするには，エクスプローラーのアドレスバーに\u0026quot;¥¥wsl$\u0026ldquo;と入力 Linuxからは，/mnt/下にWindows側のドライブがマウントされる(Cドライブは/mnt/c/) ただし，LinuxからWindows側ファイルへのアクセスには時間がかかる\n→Texのコンパイルなど頻繁に多くのファイルを書き換えるような場合には体感できるくらい遅い わたしはSyncthingというツールを使って，WindowsとLinuxの作業ディレクトリを同期している(両方に同じ内容のファイルが存在することになるので冗長ではある) ちなみにSyncthingは良くできていて，ほかのマシンとファイルを同期するのに便利(分散型なのでサーバは必要ないが，一台は最新バージョンが同期されたマシンの電源が入っていないといけないので，Raspberry Piなどを拠点にするのが良いかも) ","description":" WSL2？ WSL2のインストール 初期設定 WindowsとWSL間のファイル共有 WSL2？ WSLはLinuxのためのWindows上の仮想環境 LinuxのツールをWindowsから使いたいときに便利 LatexのコンパイルなどはLinuxの方が速いし安定しているのでWSLでやるのがおすすめ RStudio Serverも動く 基本的にはコマンド操作だがGUIアプリも動く WSL2のインストール BIOSで仮想化支援機能を有効にする 有効になっているかどうかはVirtualCheckerで確認できる(最初から有効になっている場合もある) BIOSでの設定方法はメーカーによって異なるが，IntelだとIntel Virtualization Technology(VTx)，AMDだとAMD-VとかSVMとかいう設定項目 Windows 11では，PowerShellで以下のように入力するだけでインストールできる(仮想化支援機能の有効化は必要)。デフォルトでは，Ubuntuがインストールされる。 wsl --install 初期設定 インストールしたLinuxディストリビューションを起動する(スタートメニューにUbuntuのショートカットができているはず) 初回起動時は，設定が行われるため数分かかる 起動すると新規ユーザー名とパスワードを聞かれる(パスワードは入力しても表示されないので注意) (Linuxのシェルで)パッケージのアップデート sudo apt update sudo apt upgrade -y WindowsのコマンドプロンプトやPowerShellからLinuxのコマンドを使うには，wslコマンド，もしくはubuntu runコマンドを使う wsl ls -l ubuntu run ls -l WindowsとWSL間のファイル共有 WindowsからLinuxのファイルへアクセスするには，エクスプローラーのアドレスバーに\u0026quot;¥¥wsl$\u0026ldquo;と入力 Linuxからは，/mnt/下にWindows側のドライブがマウントされる(Cドライブは/mnt/c/) ただし，LinuxからWindows側ファイルへのアクセスには時間がかかる\n→Texのコンパイルなど頻繁に多くのファイルを書き換えるような場合には体感できるくらい遅い わたしはSyncthingというツールを使って，WindowsとLinuxの作業ディレクトリを同期している(両方に同じ内容のファイルが存在することになるので冗長ではある) ちなみにSyncthingは良くできていて，ほかのマシンとファイルを同期するのに便利(分散型なのでサーバは必要ないが，一台は最新バージョンが同期されたマシンの電源が入っていないといけないので，Raspberry Piなどを拠点にするのが良いかも) "},{"id":1,"href":"/public/statistics/census/","title":"人口ピラミッドの作成(2020年国勢調査)","parent":"Rによる公的統計の視覚化","content":" はじめに 2020年の国勢調査の結果から，人口ピラミッドを作成する。データはe-statのAPIで取得可能。\n年齢不詳の人口は無視(気になる場合は，不詳補完結果を用いると良い)。 人口ピラミッドはggplotだけで描き，追加のパッケージは使わない。 男女・年齢別人口のデータを整理して，男性については数値をマイナスにすることで，人口ピラミッドのグラフを作成する。 人口ピラミッドの作成には，pyramidsというパッケージを用いる方法もある。多分，そっちの方が簡単にできる。 このサービスは、政府統計総合窓口(e-Stat)のAPI機能を使用していますが、サービスの内容は国によって保証されたものではありません。\n結果 Rのコード ","description":" はじめに 2020年の国勢調査の結果から，人口ピラミッドを作成する。データはe-statのAPIで取得可能。\n年齢不詳の人口は無視(気になる場合は，不詳補完結果を用いると良い)。 人口ピラミッドはggplotだけで描き，追加のパッケージは使わない。 男女・年齢別人口のデータを整理して，男性については数値をマイナスにすることで，人口ピラミッドのグラフを作成する。 人口ピラミッドの作成には，pyramidsというパッケージを用いる方法もある。多分，そっちの方が簡単にできる。 このサービスは、政府統計総合窓口(e-Stat)のAPI機能を使用していますが、サービスの内容は国によって保証されたものではありません。\n結果 Rのコード "},{"id":2,"href":"/public/PC/latex/","title":"WSLでLatexとPandoc","parent":"PC Tips","content":" はじめに WSLを使えば仮想環境のLinuxでtexのコンパイルを行うことが可能 Windowsでもtex環境は構築できるがコンパイルが遅い Windowsは文字コードの問題など，ならではのトラブルも多い とはいえ文書を編集するときは使い慣れたWindows環境の方が捗るので，ソースの編集はWindows上で行い，コンパイルはWSLで行うという話 PandocもWSLに入れておいた方が便利 Pandocはmarkdownで書いたファイルをいろいろな形式(PDF, Word, tex, htmlなどなど)に変換できるコンバータ markdownはtexに比べてシンプルで可読性が高い\n→基本的に執筆はmarkdownで行って，tex経由でPDF化するのが良いと思う 数式や図表の挿入，文献参照(bibtex)などかなりの部分はmarkdownでも記述できる 相互参照(texの\\label, \\ref)はpandoc-crossrefというフィルターをインストールすれば可能 Latex Tex Liveのインストール fontconfigパッケージをインストールしておく sudo apt intall libfontconfig Tex Liveインストーラを利用する ここからisoファイルをダウンロード ダウンロードしたisoファイルをWindowsでマウント WindowsのGドライブにマウントしたとすれば，以下のコマンドでWSLにもマウントできる sudo mkdir /mnt/g sudo mount -t drvfs G: /mnt/g マウントしたディレクトリに移動して，インストーラを実行(デフォルト設定で問題ないので\u0026quot;I\u0026quot;を入力してインストールを開始) cd /mnt/g sudo ./install-tl パスを通す(tlmgrコマンドを使って/usr/local/binにシンボリックリンクを追加，削除したいときは\u0026quot;add\u0026quot;を\u0026quot;remove\u0026quot;に) sudo /usr/local/texlive/????/bin/*/tlmgr path add パッケージのアップデート sudo tlmgr update --self --all Windowsからの使い方 Windowsのコマンドラインで実行したいコマンドの前にwslをつけるだけ たとえば，Linuxのuplatexを使ってsample.texをコンパイルするには wsl uplatex sample.tex Latex用エディタの設定でコンパイルに用いるコマンドの頭にwslをつけておけばOk Latex環境の構築はVisual Studio Codeがおすすめ WSLを使うのであれば，Visual Studio Codeが便利 VSCodeがLinuxのインターフェイスになる(VSCodeを使って，Linux上のファイルの編集やコンパイラの呼び出しなどができる) VSCodeはローカルのWSLだけでなく，リモート環境にもSSHで接続でき 非力なラップトップでもVSCodeだけインストールしておけば，自宅などのPCにリモートアクセスしてソースの編集やコンパイルなどが可能 VSCode用拡張機能のTex Workshopが便利 Pandoc Pandocのインストール UbuntuのaptでインストールされるPandocはかなり古い 最新版はGithubから入手可能 debファイルをダウンロード wget https://github.com/jgm/pandoc/releases/download/2.14.0.1/pandoc-2.14.0.1-1-amd64.deb インストールする sudo apt install ./pandoc-2.14.0.1-1-amd64.deb 補足：MacでおなじみのhomebrewはLinuxでも使える。homebrewのpandocは新しいので，homebrewを使ってインストールするのも良いと思う。アップデートが楽。下のPandoc-crossrefもhomebrewでインストール可能。\nPandoc-crossrefのインストール Pandoc-crossrefはPandoc本体に対応したバージョンを使う Githubからビルド済みのバイナリをダウンロード wget https://github.com/lierdakil/pandoc-crossref/releases/download/v0.3.11.0a/pandoc-crossref-Linux.tar.xz 解凍 tar -xf pandoc-crossref-Linux.tar.xz ファイルを/usr/bin に移動 sudo mv pandoc-crossref /usr/bin 補足：やっぱり秀丸が良い？ 秀丸＋祝鳥＋Sumatra PDFは論文執筆環境としてわたしも長らくお世話になってきた 秀丸は起動も速いし動作が軽い(VSCodeは少し重い) 祝鳥はWSL上のコンパイラを指定できる？(ちゃんと調べていないので不明) 補完機能などは祝鳥を使い，コンパイルは自作マクロ(latexmkを実行するだけ)で良いかな PDFファイルはSumatra PDFで見る(Acrobatとは比較にならないくらい軽い上に，ファイルがロックされないのでPDFを開いたままTexのコンパイルが可能，しかもファイルが更新されると勝手に読み込み直してくれるので便利) WindowsのTex専用エディタ＋WSL上のコンパイラ環境なら，Texmakerがおすすめ コンパイラの設定で，すべてのコマンドの前に\u0026quot;ubuntu run \u0026ldquo;を付ければwslにインストールしたTexでコンパイルされる 日本語ならLatexに\u0026quot;ubuntu run uplatex %.tex\u0026rdquo;，Bib(la)texに\u0026quot;ubuntu run upbibtex %\u0026quot;，Dvipdfmに\u0026quot;ubuntu run dvipdfmx %.dvi\u0026quot;くらい設定すれば十分 英語しか書かないならTexmakerから派生したTexStudioが良い(日本語も使えなくはないが，私の環境では漢字変換中の文字列が見えなくなるのであきらめた) WindowsでSynctexを使うときの問題 Synctexは，PDFを編集中の場所(エディタのカーソル位置)にジャンプさせたり，PDFファイルからソースファイルの対応部分にジャンプさせたりすることができる機能 VSCodeのWSL拡張ではまったく問題なく使えるが，WindowsのTex専用エディタを使うには工夫が必要 SynctexはLinux形式のパスでファイル名が書き込まれるので，Windowsのエディタでそのまま使うことはできない .synctexファイルに書き込まれたLinux形式のパスをWindows形式に置換すれば，Windows上のエディタでもSynctexが使える WSLのLinuxでWindowsのドライブのパスは/mnt/ドライブ名 Linuxパス(/mnt/c/\u0026hellip;)をWindowsパス(c:...)に変換するには，wslpathコマンドを使う .synctexファイルを圧縮なしで出力(コンパイルのオプションに -synctex=-1 をつける)し，以下のようなhスクリプトに渡せば自動化可能 たとえば，texmakerで，Latex→DVIPDF→下の変換スクリプト→PDFビューアの順で実行するユーザーコマンドを登録すればよい FILEPATH=$(wslpath $1) array=($(grep \u0026#34;/mnt/\u0026#34; $FILEPATH)) for i in ${array[@]} do FNL=${i##*:} FNW=$(wslpath -m ${FNL##*:}) sed -i -e \u0026#34;s|$FNL|$FNW|\u0026#34; $FILEPATH done ","description":"はじめに WSLを使えば仮想環境のLinuxでtexのコンパイルを行うことが可能 Windowsでもtex環境は構築できるがコンパイルが遅い Windowsは文字コードの問題など，ならではのトラブルも多い とはいえ文書を編集するときは使い慣れたWindows環境の方が捗るので，ソースの編集はWindows上で行い，コンパイルはWSLで行うという話 PandocもWSLに入れておいた方が便利 Pandocはmarkdownで書いたファイルをいろいろな形式(PDF, Word, tex, htmlなどなど)に変換できるコンバータ markdownはtexに比べてシンプルで可読性が高い\n→基本的に執筆はmarkdownで行って，tex経由でPDF化するのが良いと思う 数式や図表の挿入，文献参照(bibtex)などかなりの部分はmarkdownでも記述できる 相互参照(texの\\label, \\ref)はpandoc-crossrefというフィルターをインストールすれば可能 Latex Tex Liveのインストール fontconfigパッケージをインストールしておく sudo apt intall libfontconfig Tex Liveインストーラを利用する ここからisoファイルをダウンロード ダウンロードしたisoファイルをWindowsでマウント WindowsのGドライブにマウントしたとすれば，以下のコマンドでWSLにもマウントできる sudo mkdir /mnt/g sudo mount -t drvfs G: /mnt/g マウントしたディレクトリに移動して，インストーラを実行(デフォルト設定で問題ないので\u0026quot;I\u0026quot;を入力してインストールを開始) cd /mnt/g sudo ./install-tl パスを通す(tlmgrコマンドを使って/usr/local/binにシンボリックリンクを追加，削除したいときは\u0026quot;add\u0026quot;を\u0026quot;remove\u0026quot;に) sudo /usr/local/texlive/????/bin/*/tlmgr path add パッケージのアップデート sudo tlmgr update --self --all Windowsからの使い方 Windowsのコマンドラインで実行したいコマンドの前にwslをつけるだけ たとえば，Linuxのuplatexを使ってsample.texをコンパイルするには wsl uplatex sample.tex Latex用エディタの設定でコンパイルに用いるコマンドの頭にwslをつけておけばOk Latex環境の構築はVisual Studio Codeがおすすめ WSLを使うのであれば，Visual Studio Codeが便利 VSCodeがLinuxのインターフェイスになる(VSCodeを使って，Linux上のファイルの編集やコンパイラの呼び出しなどができる) VSCodeはローカルのWSLだけでなく，リモート環境にもSSHで接続でき 非力なラップトップでもVSCodeだけインストールしておけば，自宅などのPCにリモートアクセスしてソースの編集やコンパイルなどが可能 VSCode用拡張機能のTex Workshopが便利 Pandoc Pandocのインストール UbuntuのaptでインストールされるPandocはかなり古い 最新版はGithubから入手可能 debファイルをダウンロード wget https://github."},{"id":3,"href":"/public/statistics/population_pyramids/","title":"人口ピラミッドの推移","parent":"Rによる公的統計の視覚化","content":" はじめに 人口プラミッドの推移を描く。データは国立社会保障・人口問題研究所のホームページから取得（1965年から2065年の予測まで，Excelファイルで提供されている）。\n人口ピラミッドの作り方については，人口ピラミッドの作成(2020年国勢調査)を参照。 複数年の人口ピラミッドのグラフをきれいに並べるために，patchworkパッケージを使う。 結果 Rのコード ","description":" はじめに 人口プラミッドの推移を描く。データは国立社会保障・人口問題研究所のホームページから取得（1965年から2065年の予測まで，Excelファイルで提供されている）。\n人口ピラミッドの作り方については，人口ピラミッドの作成(2020年国勢調査)を参照。 複数年の人口ピラミッドのグラフをきれいに並べるために，patchworkパッケージを使う。 結果 Rのコード "},{"id":4,"href":"/public/PC/beamer/","title":"BeamerスライドをMarkdownで簡単に作成","parent":"PC Tips","content":" はじめに Markdownとは Markdownの書き方例 Beamerスライドの作成 Markdownファイルの作成 Markdownファイルの作成例 Pandocで変換 変換結果 はじめに Beamerのスライドはかっこいいので，それを見てLatexを使いたいと思った人も多いはず。しかし，Latexを覚えるのは大変だし，いろいろコマンドが入り混じったソースコードは可読性が低い。\nそこで，Markdownという非常にシンプルな記法で内容を記述し，Pandocというソフトを使ってBeamerに変換する方法を紹介する。\nMarkdownはテキスト・データなので，編集はPowerPointよりも軽快で内容に集中できるし，Gitでバージョン管理することもできる。ただし，Latex経由でPDFを作成するため，Latexのコンパイル環境は必要。また，PDFに変換するまでスライドの仕上がりを確認できない点や，PowerPointのようにコンテンツを柔軟にレイアウトすることが難しい点もデメリットかもしれない。\nMarkdownとは Markdownは，文書を書くための記法の一つ。テキスト・エディタで作成する。文書の構造(章・節)や，箇条書き，文字列の強調などをシンプルな記法で表現することができ，Pandocというツールを用いればhtmlやword形式，Latexなどに変換することができる(いくつかのフォーマットは逆にMarkdownへと変換することも可能)。\nMarkdownの書き方は非常にシンプル。まずは，以下だけ覚えれば十分。\n#がレベル1の見出し，##がレベル2の見出しといったように行頭に＃をつけるとその行が節や章の見出しとなる 段落の区切りは，間に一行空行を入れることで表現 箇条書きは，項目の頭に\u0026quot;- \u0026ldquo;をつける 番号付き箇条書きは，項目の頭に”1. \u0026ldquo;をつける(番号はすべて1.にしておけば自動で振ってくれる) 数式は\u0026rdquo;$\u0026ldquo;で囲ってTeX形式で書く(インラインの場合は$1個，別行立ての場合は$2個) 強調する文字列は\u0026rdquo;**\u0026ldquo;で囲む，イタリックにしたい文字は\u0026rdquo;*\u0026ldquo;で囲む Markdownの書き方例 --- title: Markdownの書き方例 --- # はじめに(レベル1の見出し) ## はじめの一歩(レベル2の見出し) - 箇条書き1 - 箇条書き2 ## 次の一歩(レベル2の見出し) 1. 番号付き箇条書きは，1.をつける 1. すべて1.にしておく 1. 自動で番号を振ってくれる # 文章を書く(レベル1の見出し) 内容はテキスト・エディタなどで作成する。メモ帳でも十分だが，Markdown専用のエディタもいろいろあるので，使いやすいものを選ぼう。 段落を区切るときには，改行してさらに一行空行を挿入する。段落のはじめに一文字空ける必要はない(wordやPDFに変換するときに自動でフォーマットされる)。 文字列の**強調**，*斜体*は，”*\u0026#34;で囲むことで表現できる。 $$\\log (1+x) \\approx x$$ インライン数式は，$\\log (1+x) \\approx x$のように\u0026#34;$\u0026#34;で囲む。 htmlに変換するコマンドは以下。\npandoc sample1.md -o sample1.html\u0026#34; Beamerスライドの作成 MarkdownからBeamerプレゼンテーションのPDFを作成するために必要なものは以下。\nMarkdownを書くためのエディタ メモ帳でも書くことはできる ちょっと気の利いたエディタならMarkdownのシンタックスハイライトやアウトライン解析に対応している おすすめはVisual Studio Code Pandoc 無料の文書形式変換ソフト→Markdownからだとhtmlやword，Latexなどいろいろ変換できる おすすめは，WSL2(Windows Subsystem for Linux 2)上にインストールして使うこと Tex MarkdownをWordやhtmlに変換するには不要 Beamerスライドの作成やLatex経由でPDFを作成するためには必須 こちらもおすすめはWSL2(Windows Subsystem for Linux 2)上にインストールして使うこと PDFファイルのビューア WindowsであればSumatra PDF一択→Sumatra PDFは開いているファイルをロックしないので，ファイルを閉じなくても上書きできる(ファイルを上書きすると自動的に再読み込みされる) Sumatra PDFは動作が軽いので，普段使いにもおすすめ Macだとskimが良い フォント IPAフォントがおすすめ Markdownファイルの作成 Beamerスライド作るときのポイントは以下。\nスライドタイトルを##(レベル2の見出し)で書く レベル2の見出しがあると，自動的に新しいスライドが作成される スライドタイトルなしで新しいスライドを作成するには，\u0026rdquo;\u0026mdash;\u0026ldquo;を入れる テーマとかTeXのプリアンブルに書くような内容は，yamlヘッダの部分に書く Markdownファイルの作成例 --- title: \u0026#34;MarkdownからBeamer\u0026#34; subtitle: \u0026#34;Pandocで変換\u0026#34; author: \u0026#34;A大学　B太郎\u0026#34; date: 2021/02/08 header-includes: - \\usepackage{bookmark} - \\usepackage{zxjatype} - \\usepackage[ipa]{zxjafont} - \\usetheme{metropolis} --- ## yamlヘッダの説明 - yamlヘッダのメタ情報 - title: プレゼンテーションのタイトル - subtitle: サブタイトル - author: 発表者 - date: 日付 ## TeXのプリアンブル部分の説明 1. \\\\usepackage{bookmark} : PDFにしおりを付ける 1. \\\\usepackage{zxjatype} : 日本語を使うために必要 1. \\\\usepackage[ipa]{zxjafont} : フォントの指定(ここではIPAフォントを指定している) 1. \\\\usetheme{metropolis} : beamerのテーマ，metropolisおすすめ(TeX Liveに最初から入ってる) --- ## そのほか - インライン数式:，$\\log (1+x)=x$ - 別行立て数式 $$f(x)=\\dfrac{1}{\\sqrt{2\\pi\\sigma}}\\exp(-\\dfrac{(x-\\mu)^ 2}{2\\sigma^ 2})$$ - 表 ||a|b| |-|-|-| |c|0|1| |d|1|0| --- - 図 ![図のキャプション](figure.png){width=8cm} Pandocで変換 コマンドプロンプトかPowershellでサンプルの.mdと画像の入ったフォルダに移動して，以下のコマンドを実行すればPDFができるはず。\npandoc sample.md --pdf-engine=xelatex -t beamer -o sample.pdf 変換結果 ","description":"はじめに Markdownとは Markdownの書き方例 Beamerスライドの作成 Markdownファイルの作成 Markdownファイルの作成例 Pandocで変換 変換結果 はじめに Beamerのスライドはかっこいいので，それを見てLatexを使いたいと思った人も多いはず。しかし，Latexを覚えるのは大変だし，いろいろコマンドが入り混じったソースコードは可読性が低い。\nそこで，Markdownという非常にシンプルな記法で内容を記述し，Pandocというソフトを使ってBeamerに変換する方法を紹介する。\nMarkdownはテキスト・データなので，編集はPowerPointよりも軽快で内容に集中できるし，Gitでバージョン管理することもできる。ただし，Latex経由でPDFを作成するため，Latexのコンパイル環境は必要。また，PDFに変換するまでスライドの仕上がりを確認できない点や，PowerPointのようにコンテンツを柔軟にレイアウトすることが難しい点もデメリットかもしれない。\nMarkdownとは Markdownは，文書を書くための記法の一つ。テキスト・エディタで作成する。文書の構造(章・節)や，箇条書き，文字列の強調などをシンプルな記法で表現することができ，Pandocというツールを用いればhtmlやword形式，Latexなどに変換することができる(いくつかのフォーマットは逆にMarkdownへと変換することも可能)。\nMarkdownの書き方は非常にシンプル。まずは，以下だけ覚えれば十分。\n#がレベル1の見出し，##がレベル2の見出しといったように行頭に＃をつけるとその行が節や章の見出しとなる 段落の区切りは，間に一行空行を入れることで表現 箇条書きは，項目の頭に\u0026quot;- \u0026ldquo;をつける 番号付き箇条書きは，項目の頭に”1. \u0026ldquo;をつける(番号はすべて1.にしておけば自動で振ってくれる) 数式は\u0026rdquo;$\u0026ldquo;で囲ってTeX形式で書く(インラインの場合は$1個，別行立ての場合は$2個) 強調する文字列は\u0026rdquo;**\u0026ldquo;で囲む，イタリックにしたい文字は\u0026rdquo;*\u0026ldquo;で囲む Markdownの書き方例 --- title: Markdownの書き方例 --- # はじめに(レベル1の見出し) ## はじめの一歩(レベル2の見出し) - 箇条書き1 - 箇条書き2 ## 次の一歩(レベル2の見出し) 1. 番号付き箇条書きは，1.をつける 1. すべて1.にしておく 1. 自動で番号を振ってくれる # 文章を書く(レベル1の見出し) 内容はテキスト・エディタなどで作成する。メモ帳でも十分だが，Markdown専用のエディタもいろいろあるので，使いやすいものを選ぼう。 段落を区切るときには，改行してさらに一行空行を挿入する。段落のはじめに一文字空ける必要はない(wordやPDFに変換するときに自動でフォーマットされる)。 文字列の**強調**，*斜体*は，”*\u0026#34;で囲むことで表現できる。 $$\\log (1+x) \\approx x$$ インライン数式は，$\\log (1+x) \\approx x$のように\u0026#34;$\u0026#34;で囲む。 htmlに変換するコマンドは以下。\npandoc sample1.md -o sample1.html\u0026#34; Beamerスライドの作成 MarkdownからBeamerプレゼンテーションのPDFを作成するために必要なものは以下。\nMarkdownを書くためのエディタ メモ帳でも書くことはできる ちょっと気の利いたエディタならMarkdownのシンタックスハイライトやアウトライン解析に対応している おすすめはVisual Studio Code Pandoc 無料の文書形式変換ソフト→Markdownからだとhtmlやword，Latexなどいろいろ変換できる おすすめは，WSL2(Windows Subsystem for Linux 2)上にインストールして使うこと Tex MarkdownをWordやhtmlに変換するには不要 Beamerスライドの作成やLatex経由でPDFを作成するためには必須 こちらもおすすめはWSL2(Windows Subsystem for Linux 2)上にインストールして使うこと PDFファイルのビューア WindowsであればSumatra PDF一択→Sumatra PDFは開いているファイルをロックしないので，ファイルを閉じなくても上書きできる(ファイルを上書きすると自動的に再読み込みされる) Sumatra PDFは動作が軽いので，普段使いにもおすすめ Macだとskimが良い フォント IPAフォントがおすすめ Markdownファイルの作成 Beamerスライド作るときのポイントは以下。"},{"id":5,"href":"/public/statistics/vital/","title":"出生数と合計特殊出生率の推移","parent":"Rによる公的統計の視覚化","content":" はじめに 人口動態調査を使って，1899年からの出生数の推移と，戦後の合計特殊出生率のグラフを描く。\nこのサービスは、政府統計総合窓口(e-Stat)のAPI機能を使用していますが、サービスの内容は国によって保証されたものではありません。\n結果 Rのコード ","description":" はじめに 人口動態調査を使って，1899年からの出生数の推移と，戦後の合計特殊出生率のグラフを描く。\nこのサービスは、政府統計総合窓口(e-Stat)のAPI機能を使用していますが、サービスの内容は国によって保証されたものではありません。\n結果 Rのコード "},{"id":6,"href":"/public/PC/rstudio-server/","title":"WSLでRStudio Server","parent":"PC Tips","content":" RStudio Server？ WSLへのインストール R本体のインストール RStudio Serverのインストール tidyverseをインストール 通信を暗号化する RStudio Server？ RStudioをブラウザで使うことができる，自前のRStudio Cloud インターフェイスや操作性はデスクトップ版RStudioとほぼ変わらない メリット サーバー1台に入れておけば，どのマシンからも同じ環境で分析可能 中断した作業を別のマシンでシームレスに再開することができる iPadやスマホでも使うことができる(実際に使うかどうかは別として) RとRStudioはWindowsで使うといろいろな問題が起きるので，WSLにRStudioをインストールして使うのがおすすめ WSLへのインストール R本体のインストール 基本的には，RStudio公式で解説されている通り Rで計量政治学入門にも解説がある\n→こっちの方が良いと思う まず，証明書とレポジトリを追加 wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | sudo tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc sudo add-apt-repository \u0026#39;deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/\u0026#39; RおよびRStudio Serverを使うために必要なパッケージをインストール sudo apt install -y r-base r-base-core r-recommended r-base-dev gdebi-core build-essential libcurl4-gnutls-dev libxml2-dev libssl-dev RStudio Serverのインストール Ubuntu用のRStudio Serverをダウンロード wget https://rstudio.org/download/latest/stable/server/$(lsb_release -cs)/rstudio-server-latest-amd64.deb RStudio Serverのインストール sudo gdebi rstudio-server-latest-amd64.deb インストールが完了するとsystemdに登録されるので，WSLを起動すれば自動的にRStudio Serverがバックグラウンドで動き始める http://localhost:8787にアクセスしてRStudio Serverが動いていることを確認 ユーザー名とパスワードは，Ubuntuに設定したもの Chromeでショートカットを作成しウィンドウで起動するようにすれば，デスクトップ版のRStudioとほぼ同じように使える LAN内のほかのPCやインターネット経由でもアクセスできるようにすれば便利だが，このまま外部からアクセスできるようにするのは危険なので注意 tidyverseをインストール Rにtidyverseパッケージをインストールするのに必要なパッケージをインストール sudo apt install libcurl4-openssl-dev libxml2-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev わたしの場合は，上記だけでtidyverseをインストールすることができた 足りないパッケージがある場合にはエラーメッセージを読んでインストールする 通信を暗号化する 前はいろいろ具体的な方法を書いていたが，わたし自信コンピュータにそれほど詳しいわけではなく，セキュリティ上問題がある気がするので，概要にとどめておくことにした。\nChromeでは以前localhostでもhttpでアクセスするとブラウザに\u0026quot;このサイトへの接続は安全ではありません\u0026quot;とセキュリティの警告が表示されていて邪魔たったが，現在は表示されないので，LANやインターネット上のほかのマシンからアクセスする場合以外は暗号化する必要はないと思う。\nほかのマシンからアクセスする際に通信を暗号化する方法はいろいろあるが，一番手間がかからないのはSSHポート転送を使う方法。アクセス先がlocalhostになるので，ブラウザの警告も表示されない。\nインターネットに直接公開するのはあり得ないと思うが，VPNでの利用を前提にNginxなどのリバースプロキシを使うのも良い。証明書はLet\u0026rsquo;s encryptで取得できる。ドメイン名が必要だが，MyDNS.JPのダイナミックDNSでOk。MyDNSでLet\u0026rsquo;s encryptの証明書を取得するDirectEditというスクリプトが公開されている。\n","description":"RStudio Server？ WSLへのインストール R本体のインストール RStudio Serverのインストール tidyverseをインストール 通信を暗号化する RStudio Server？ RStudioをブラウザで使うことができる，自前のRStudio Cloud インターフェイスや操作性はデスクトップ版RStudioとほぼ変わらない メリット サーバー1台に入れておけば，どのマシンからも同じ環境で分析可能 中断した作業を別のマシンでシームレスに再開することができる iPadやスマホでも使うことができる(実際に使うかどうかは別として) RとRStudioはWindowsで使うといろいろな問題が起きるので，WSLにRStudioをインストールして使うのがおすすめ WSLへのインストール R本体のインストール 基本的には，RStudio公式で解説されている通り Rで計量政治学入門にも解説がある\n→こっちの方が良いと思う まず，証明書とレポジトリを追加 wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | sudo tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc sudo add-apt-repository \u0026#39;deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/\u0026#39; RおよびRStudio Serverを使うために必要なパッケージをインストール sudo apt install -y r-base r-base-core r-recommended r-base-dev gdebi-core build-essential libcurl4-gnutls-dev libxml2-dev libssl-dev RStudio Serverのインストール Ubuntu用のRStudio Serverをダウンロード wget https://rstudio.org/download/latest/stable/server/$(lsb_release -cs)/rstudio-server-latest-amd64.deb RStudio Serverのインストール sudo gdebi rstudio-server-latest-amd64.deb インストールが完了するとsystemdに登録されるので，WSLを起動すれば自動的にRStudio Serverがバックグラウンドで動き始める http://localhost:8787にアクセスしてRStudio Serverが動いていることを確認 ユーザー名とパスワードは，Ubuntuに設定したもの Chromeでショートカットを作成しウィンドウで起動するようにすれば，デスクトップ版のRStudioとほぼ同じように使える LAN内のほかのPCやインターネット経由でもアクセスできるようにすれば便利だが，このまま外部からアクセスできるようにするのは危険なので注意 tidyverseをインストール Rにtidyverseパッケージをインストールするのに必要なパッケージをインストール sudo apt install libcurl4-openssl-dev libxml2-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev わたしの場合は，上記だけでtidyverseをインストールすることができた 足りないパッケージがある場合にはエラーメッセージを読んでインストールする 通信を暗号化する 前はいろいろ具体的な方法を書いていたが，わたし自信コンピュータにそれほど詳しいわけではなく，セキュリティ上問題がある気がするので，概要にとどめておくことにした。"},{"id":7,"href":"/public/statistics/Industry_occupation/","title":"産業構造・職業構成の変化","parent":"Rによる公的統計の視覚化","content":" はじめに 国勢調査から，産業構造(就業者の産業別割合)および就業者の職業構成の変化をグラフ化する。\n日本標準産業分類の変更に伴い，国勢調査の産業分類が2000年以前と2005年以降で異なるため，データは完全には接続できない。ただし，1995年と2000年については新旧両方の分類のデータが公開されている。ここでは，新旧の分類を統合せず，それぞれについてグラフを作成する。\nまた，2009年の日本標準職業分類の変更に伴い，データはその前後で完全には接続できない。ただし，1995～2005年については新旧両方の分類のデータが公開されている。ここでは，新旧の分類を統合せず，それぞれについてグラフを作成する。\nこのサービスは、政府統計総合窓口(e-Stat)のAPI機能を使用していますが、サービスの内容は国によって保証されたものではありません。\n結果 産業構造 職業構成 Rのコード 新旧分類を統合して1つのグラフにしたものを作成するコードもgithub gistには置いてある。\n","description":"はじめに 国勢調査から，産業構造(就業者の産業別割合)および就業者の職業構成の変化をグラフ化する。\n日本標準産業分類の変更に伴い，国勢調査の産業分類が2000年以前と2005年以降で異なるため，データは完全には接続できない。ただし，1995年と2000年については新旧両方の分類のデータが公開されている。ここでは，新旧の分類を統合せず，それぞれについてグラフを作成する。\nまた，2009年の日本標準職業分類の変更に伴い，データはその前後で完全には接続できない。ただし，1995～2005年については新旧両方の分類のデータが公開されている。ここでは，新旧の分類を統合せず，それぞれについてグラフを作成する。\nこのサービスは、政府統計総合窓口(e-Stat)のAPI機能を使用していますが、サービスの内容は国によって保証されたものではありません。\n結果 産業構造 職業構成 Rのコード 新旧分類を統合して1つのグラフにしたものを作成するコードもgithub gistには置いてある。"},{"id":8,"href":"/public/statistics/labor_force/","title":"労働力率の推移","parent":"Rによる公的統計の視覚化","content":" はじめに 労働力調査を用いて，労働力人口の推移，年齢階級別労働力率・失業率の推移，労働供給のM字カーブのグラフを作成する。\n結果 労働力人口の推移 年齢階級別労働力率の推移 年齢階級別失業率の推移 M字カーブ Rのコード ","description":" はじめに 労働力調査を用いて，労働力人口の推移，年齢階級別労働力率・失業率の推移，労働供給のM字カーブのグラフを作成する。\n結果 労働力人口の推移 年齢階級別労働力率の推移 年齢階級別失業率の推移 M字カーブ Rのコード "},{"id":9,"href":"/public/statistics/working_hours/","title":"労働時間の変化","parent":"Rによる公的統計の視覚化","content":" はじめに 毎月勤労統計の長期時系列表を使って，就業形態別に総実労働時間数の推移をグラフにする。\n結果 Rのコード ","description":" はじめに 毎月勤労統計の長期時系列表を使って，就業形態別に総実労働時間数の推移をグラフにする。\n結果 Rのコード "},{"id":10,"href":"/public/statistics/wage_profile/","title":"学歴別賃金プロファイル(令和3年度賃金構造基本統計調査)","parent":"Rによる公的統計の視覚化","content":" はじめに 令和3年賃金構造基本統計調査の標準労働者のデータを使って，学歴（高校，大学，大学院）別の賃金プロファイルをグラフにする(男性と女性それぞれについて作成する)。また，大学卒労働者について企業規模別の賃金プロファイルをグラフにする。\n結果 学歴別賃金プロファイル 大学卒労働者の企業規模別賃金プロファイル Rのコード ","description":" はじめに 令和3年賃金構造基本統計調査の標準労働者のデータを使って，学歴（高校，大学，大学院）別の賃金プロファイルをグラフにする(男性と女性それぞれについて作成する)。また，大学卒労働者について企業規模別の賃金プロファイルをグラフにする。\n結果 学歴別賃金プロファイル 大学卒労働者の企業規模別賃金プロファイル Rのコード "},{"id":11,"href":"/public/statistics/quarterly_gdp/","title":"経済成長率と寄与度のグラフ作成(四半期GDP速報)","parent":"Rによる公的統計の視覚化","content":" はじめに 国民経済計算(GDP統計)の四半期GDP速報を使って，経済成長率の折れ線グラフと寄与度の積上げ棒グラフを重ねたものを作成する。データはe-statのAPIで入手する。\ne-statでは，四半期GDP速報は1994年からデータを入手可能だが，1994年から現在までを1枚のグラフにすると見にくいので，期間を指定してグラフを作成する。ここでは，2014年以降のグラフを描いた。\nできあがるのは新聞などでもよく見るグラフ。\nこのサービスは、政府統計総合窓口(e-Stat)のAPI機能を使用していますが、サービスの内容は国によって保証されたものではありません。\n結果 Rのコード ","description":" はじめに 国民経済計算(GDP統計)の四半期GDP速報を使って，経済成長率の折れ線グラフと寄与度の積上げ棒グラフを重ねたものを作成する。データはe-statのAPIで入手する。\ne-statでは，四半期GDP速報は1994年からデータを入手可能だが，1994年から現在までを1枚のグラフにすると見にくいので，期間を指定してグラフを作成する。ここでは，2014年以降のグラフを描いた。\nできあがるのは新聞などでもよく見るグラフ。\nこのサービスは、政府統計総合窓口(e-Stat)のAPI機能を使用していますが、サービスの内容は国によって保証されたものではありません。\n結果 Rのコード "},{"id":12,"href":"/public/statistics/map/","title":"コロプレス図(Covid-19累積死亡者数)","parent":"Rによる公的統計の視覚化","content":" はじめに 国土交通省の国土数値情報を用いて，都道府県単位のコロプレス図を描画するための地図を作成する。\nまず，三重大学の奥村先生のホームページを参考に，コロプレス図用のgeojsonファイルを作成する。国土数値情報のシェープファイルはサイズが大きいので，都道府県単位に集約し，さらにデータ量を1000分の1に減らす。無理に手元でやらなくても奥村先生が完成したgeojsonファイルを公開してくれているので，それをダウンロードして使っても良い。\ngeojsonファイルに都道府県単位のデータをマージすることで，コロプレス図が作成できる。ここでは，例として厚労省のオープンデータから都道府県別のCovid-19の累積死亡者数を入手し，コロプレス図を作成する (厚労省のオープンデータは新型コロナの5類移行で更新終了)。\n結果 2022/05/08までの都道府県別Covid-19累積死亡者数 Rのコード geojsonファイルの作成 都道府県別Covid-19累積死亡者数(2023/5/8まで) ","description":" はじめに 国土交通省の国土数値情報を用いて，都道府県単位のコロプレス図を描画するための地図を作成する。\nまず，三重大学の奥村先生のホームページを参考に，コロプレス図用のgeojsonファイルを作成する。国土数値情報のシェープファイルはサイズが大きいので，都道府県単位に集約し，さらにデータ量を1000分の1に減らす。無理に手元でやらなくても奥村先生が完成したgeojsonファイルを公開してくれているので，それをダウンロードして使っても良い。\ngeojsonファイルに都道府県単位のデータをマージすることで，コロプレス図が作成できる。ここでは，例として厚労省のオープンデータから都道府県別のCovid-19の累積死亡者数を入手し，コロプレス図を作成する (厚労省のオープンデータは新型コロナの5類移行で更新終了)。\n結果 2022/05/08までの都道府県別Covid-19累積死亡者数 Rのコード geojsonファイルの作成 都道府県別Covid-19累積死亡者数(2023/5/8まで) "},{"id":13,"href":"/public/PC/Stata/","title":"WSLでStata","parent":"PC Tips","content":" はじめに StataのLinux版はWSLでも使うことができる。Linux版はCUIで使うこともできるし，GUIも普通に動く。とくにWindows版のStataで困っていなければまったく必要ない。個人的には，シェルやRStudioからStataのコードを実行できるのが便利。Jupyter notebookでも使える。\nStataのインストール WSLにLinux版Stataをインストールする方法は，公式ページに説明されている通り。 ただし，足りないパッケージがあって起動しないので，libtinfoとlibncursesをインストールしておく。\nsudo apt install -y libtinfo5 libncurses5 上記の公式ページの通りにインストールを実行，終わったら画面に表示される指示にしたがい，(rootのままで)stinitを実行する。\n/usr/local/stata17/stinit 指示にしたがいながらライセンス情報を入力すればOk。\nWSLでもGUIが使える。ただし，libgtk2.0-0というパッケージが足りないのでインストールしておく。\nsudo apt install libgtk2.0-0 Stataを起動するには，/usr/local/stata17/にインストールされた以下のコマンドを実行(わたしのライセンスはMPだが，全部インストールされた)。\nバージョン CUI起動コマンド GUI起動コマンド Stata BE stata xstata Stata SE stata-se xstata-se Stata MP stata-mp xstata-mp /usr/local/stata17にPathを通すか，エイリアスを作成しておくと便利。あと，rootになっているついでに，Stataを起動してupdate allしておくと良い。\nRStudioでStataを使う 個人的にStataのDoファイル・エディタはあまりしっくりこないので，RStudioを使っている。RStudioのターミナルでStataを起動しておいて，エディタの右下にある言語を\u0026quot;Shell\u0026quot;に設定すれば，Ctrl+EnterでDoファイルを1行実行して次の行に移動できる。\nJupyter notebookでStataを使う PythonなどでJupyter notebookを使っているのであれば，StataもJupyter notebookで使うと良いかもしれない。\nJupyter ntoebookのインストール たぶんAnacondaとかJupyter Labとかフルセットの環境を構築した方が良いと思うが，ここでは必要最低限でいきたい。\nもしPythonのパッケージ・マネージャであるpipがインストールされていなければ，インストールする。\nsudo apt install python3-pip pipを使って，Jupyter notebookをインストール。\npip3 install notebook ~/.local/bin にインストールされるので，Pathが通っていることを確認しておく。\nstata_kernelのインストール 次に，Jupyter notebookでStataを操作するためのカーネルをインストール。\npip3 install stata_kernel python -m stata_kernel.install (2022.9.7現在) これでインストールされたstata_kernelは，Stata 17で使う場合にグラフ表示に不具合がある。Stata 17で使う場合には，githubからstata_session.pyの最新版をダウンロードして，~/.local/lib/python3.10/site-packages/stata_kernel/session_stata.pyを置き換えればOk。逆にStata 16以前の場合には，stata_session.pyを最新版に置き換えると不具合が起きると思う。\nあとは，~/ に.stata_kernel.confが作成されているので，2行目にStataのPathを設定する(たとえば，stata_path=/usr/local/stata17/stata-mp)。\nJupyter notebookを起動して，kernelをStataに設定すれば使えるはず。\njupyter-notebook 自動的にブラウザが開くはずだが，ターミナルによっては開かない場合もあるみたい。その場合は，http://localhost:8888 にアクセスすればOk。\nVS Codeで使う ブラウザで使うのも良いが，やはりVS Codeが便利。\npython jupyter のextensionを入れれば快適な分析環境になる。\n","description":"はじめに StataのLinux版はWSLでも使うことができる。Linux版はCUIで使うこともできるし，GUIも普通に動く。とくにWindows版のStataで困っていなければまったく必要ない。個人的には，シェルやRStudioからStataのコードを実行できるのが便利。Jupyter notebookでも使える。\nStataのインストール WSLにLinux版Stataをインストールする方法は，公式ページに説明されている通り。 ただし，足りないパッケージがあって起動しないので，libtinfoとlibncursesをインストールしておく。\nsudo apt install -y libtinfo5 libncurses5 上記の公式ページの通りにインストールを実行，終わったら画面に表示される指示にしたがい，(rootのままで)stinitを実行する。\n/usr/local/stata17/stinit 指示にしたがいながらライセンス情報を入力すればOk。\nWSLでもGUIが使える。ただし，libgtk2.0-0というパッケージが足りないのでインストールしておく。\nsudo apt install libgtk2.0-0 Stataを起動するには，/usr/local/stata17/にインストールされた以下のコマンドを実行(わたしのライセンスはMPだが，全部インストールされた)。\nバージョン CUI起動コマンド GUI起動コマンド Stata BE stata xstata Stata SE stata-se xstata-se Stata MP stata-mp xstata-mp /usr/local/stata17にPathを通すか，エイリアスを作成しておくと便利。あと，rootになっているついでに，Stataを起動してupdate allしておくと良い。\nRStudioでStataを使う 個人的にStataのDoファイル・エディタはあまりしっくりこないので，RStudioを使っている。RStudioのターミナルでStataを起動しておいて，エディタの右下にある言語を\u0026quot;Shell\u0026quot;に設定すれば，Ctrl+EnterでDoファイルを1行実行して次の行に移動できる。\nJupyter notebookでStataを使う PythonなどでJupyter notebookを使っているのであれば，StataもJupyter notebookで使うと良いかもしれない。\nJupyter ntoebookのインストール たぶんAnacondaとかJupyter Labとかフルセットの環境を構築した方が良いと思うが，ここでは必要最低限でいきたい。\nもしPythonのパッケージ・マネージャであるpipがインストールされていなければ，インストールする。\nsudo apt install python3-pip pipを使って，Jupyter notebookをインストール。\npip3 install notebook ~/.local/bin にインストールされるので，Pathが通っていることを確認しておく。\nstata_kernelのインストール 次に，Jupyter notebookでStataを操作するためのカーネルをインストール。\npip3 install stata_kernel python -m stata_kernel."},{"id":14,"href":"/public/for-students/","title":"For students","parent":"Tomokazu NOMURA's Web Page","content":"","description":""},{"id":15,"href":"/public/","title":"Tomokazu NOMURA's Web Page","parent":"","content":" About me 野村　友和 大阪経済大学情報社会学部准教授 同志社大学非常勤講師 神戸市外国語大学非常勤講師 博士(経済学)，神戸大学 researchmap CV ","description":" About me 野村　友和 大阪経済大学情報社会学部准教授 同志社大学非常勤講師 神戸市外国語大学非常勤講師 博士(経済学)，神戸大学 researchmap CV "},{"id":16,"href":"/public/for-students/graph/","title":"見やすいグラフや図の作成","parent":"For students","content":" はじめに カラーユニバーサルデザイン Microsoft Officeでの図やグラフの取扱い ラスター画像とベクター画像 Microsoft Officeでsvg形式の画像を利用する Microsoft Office以外の作図，グラフ作成ソフト Inkscape Drawio Gnuplot はじめに レポートを作成するときには，すべての人が読みやすいように心がけることが重要です。この記事では，図表やグラフを作成する際のtipsを紹介します。\nカラーユニバーサルデザイン 図表を作成するときには，色の使い方に注意してください。カラフルなグラフは目を引きますが，色というのはすべての人が同じように見分けられるものではありません。色覚の多様性に配慮した配色を心がけるようにしましょう。\nカラーユニバーサルデザイン推奨配色セットというのが公開されていますので，参考にしてください。\nカラーユニバーサルデザイン推奨配色セット ただ，Excelのグラフで色分けしなければいけない項目が多い場合などには，一つずつ設定するのは時間がかかりすぎます。そういうときにはOfficeにテーマファイルを適用します。下記のCUDO（NPO法人カラーユニバーサルデザイン機構）のページで色覚の多様性に配慮したテーマファイルが提供されていますので，それを適用すると良いでしょう。\n色弱の人にも分かりやすい色の「MSワードⓇ」や「エクセルⓇ」を作ってみた。 ただし，モノクロでも線や点の形状を変えることで，多くの項目を表現できます。色は画面で見る場合と印刷する場合でも見え方が違うので，モノクロにしても見分けられるように作成するのが良いと思います。\nMicrosoft Officeでの図やグラフの取扱い 多くの人はWordでレポートを作成する場合に，PowerPointで図を描き，Excelでグラフを描いていると思います。その場合には，図やグラフをベクター形式で保存して貼り付けると美しく仕上がります。\nラスター画像とベクター画像 画像形式は大きくラスターとベクターの2種類に分類されます。ラスター形式は，1つ1つの点の集まりで，写真のような画像を保存するのに適しています。ベクター形式は，線や四角形，丸などの図形が数値情報として記録されており，図やグラフを保存するのに適しています。\nレポートに利用する図やグラフであれば，通常はベクター形式の方が望ましいです。ベクター形式は拡大したり縮小したりしても，図形がモザイクのようになったりギザギザしたりしません。そのため，小さくて見にくいと思った部分は，拡大すれば見やすくなります。一方で，ラスター形式の場合は，画像を拡大しても1つ1つの画素が大きくなるだけなので，細かい部分が見やすくなるとは限りません。\nラスター形式の代表的なフォーマットは，bmp，jpg，pngなどです。ベクター形式の代表的なフォーマットは，eps，svgなどです。epsは昔よく使われていた形式ですが，最近はPDFに置き換えられていてあまり見かけません。pdfはラスターとベクターの両方を含めることができ，幅広く用いられているので，汎用性が高くおすすめなのですが，残念ながらWordの文書に貼り付けることができません。\nMicrosoft Officeでsvg形式の画像を利用する Wordに貼り付けることができるベクター形式の画像はsvgです。svgファイルはwebでも使えるので，今後主流になるかもしれません。\nExcelのグラフやPowerPointの図は，右クリックメニューから「画像として保存」で，ファイル形式としてsvgを選択することでsvg形式で保存できます。コピー・貼り付けはできませんが，保存したファイルをWordにドラッグ・ドロップすれば貼り付けられるのでそれほど手間はかかりません。\nMicrosoft Office以外の作図，グラフ作成ソフト Microsoft Officeよりも洗練された図やグラフをベクター形式で作成するための無料ソフトを紹介しておきます。\nInkscape 定番のドローソフトです。svg形式の画像を作成できます。イラストレータやデザイナー向けの本格的なソフトです。多機能な分だけ習得に時間がかかるかもしれません。最近のパソコンだと軽快に動作します。\nInkscape.org Drawio おすすめ。使い方も直感的で，動作も軽快です。手書きっぽい図を作成することもできます。PCにインストールして使うこともできますが，オンライン版はブラウザ上で動きます。データはGoogle Driveに保存されます。\nファイル形式は独自形式かsvgです。とくに違いはないので，svgで保存しておけば良いと思います。また，PDFへの変換も可能です。\nDrawio オンライン版・・・Google Driveのダイアログが表示されますが，×を押せばスキップして開始できます（もちろん，作図後にGoogle Driveに保存できます）。メニューのHelpからGet Desktopでデスクトップ版をダウンロード可能です。 Gnuplot おすすめ。グラフ作成の定番ソフトです。簡単なスクリプトを覚えればすぐに使えるようになります。データからグラフを作成するだけではなく，関数のグラフを描くことも可能です。3Dグラフも描くことができます。\nグラフの出力は，画面，png，svg，pdfなどほとんど何でも選択可能です。\ngnuplot homepage ","description":" はじめに カラーユニバーサルデザイン Microsoft Officeでの図やグラフの取扱い ラスター画像とベクター画像 Microsoft Officeでsvg形式の画像を利用する Microsoft Office以外の作図，グラフ作成ソフト Inkscape Drawio Gnuplot はじめに レポートを作成するときには，すべての人が読みやすいように心がけることが重要です。この記事では，図表やグラフを作成する際のtipsを紹介します。\nカラーユニバーサルデザイン 図表を作成するときには，色の使い方に注意してください。カラフルなグラフは目を引きますが，色というのはすべての人が同じように見分けられるものではありません。色覚の多様性に配慮した配色を心がけるようにしましょう。\nカラーユニバーサルデザイン推奨配色セットというのが公開されていますので，参考にしてください。\nカラーユニバーサルデザイン推奨配色セット ただ，Excelのグラフで色分けしなければいけない項目が多い場合などには，一つずつ設定するのは時間がかかりすぎます。そういうときにはOfficeにテーマファイルを適用します。下記のCUDO（NPO法人カラーユニバーサルデザイン機構）のページで色覚の多様性に配慮したテーマファイルが提供されていますので，それを適用すると良いでしょう。\n色弱の人にも分かりやすい色の「MSワードⓇ」や「エクセルⓇ」を作ってみた。 ただし，モノクロでも線や点の形状を変えることで，多くの項目を表現できます。色は画面で見る場合と印刷する場合でも見え方が違うので，モノクロにしても見分けられるように作成するのが良いと思います。\nMicrosoft Officeでの図やグラフの取扱い 多くの人はWordでレポートを作成する場合に，PowerPointで図を描き，Excelでグラフを描いていると思います。その場合には，図やグラフをベクター形式で保存して貼り付けると美しく仕上がります。\nラスター画像とベクター画像 画像形式は大きくラスターとベクターの2種類に分類されます。ラスター形式は，1つ1つの点の集まりで，写真のような画像を保存するのに適しています。ベクター形式は，線や四角形，丸などの図形が数値情報として記録されており，図やグラフを保存するのに適しています。\nレポートに利用する図やグラフであれば，通常はベクター形式の方が望ましいです。ベクター形式は拡大したり縮小したりしても，図形がモザイクのようになったりギザギザしたりしません。そのため，小さくて見にくいと思った部分は，拡大すれば見やすくなります。一方で，ラスター形式の場合は，画像を拡大しても1つ1つの画素が大きくなるだけなので，細かい部分が見やすくなるとは限りません。\nラスター形式の代表的なフォーマットは，bmp，jpg，pngなどです。ベクター形式の代表的なフォーマットは，eps，svgなどです。epsは昔よく使われていた形式ですが，最近はPDFに置き換えられていてあまり見かけません。pdfはラスターとベクターの両方を含めることができ，幅広く用いられているので，汎用性が高くおすすめなのですが，残念ながらWordの文書に貼り付けることができません。\nMicrosoft Officeでsvg形式の画像を利用する Wordに貼り付けることができるベクター形式の画像はsvgです。svgファイルはwebでも使えるので，今後主流になるかもしれません。\nExcelのグラフやPowerPointの図は，右クリックメニューから「画像として保存」で，ファイル形式としてsvgを選択することでsvg形式で保存できます。コピー・貼り付けはできませんが，保存したファイルをWordにドラッグ・ドロップすれば貼り付けられるのでそれほど手間はかかりません。\nMicrosoft Office以外の作図，グラフ作成ソフト Microsoft Officeよりも洗練された図やグラフをベクター形式で作成するための無料ソフトを紹介しておきます。\nInkscape 定番のドローソフトです。svg形式の画像を作成できます。イラストレータやデザイナー向けの本格的なソフトです。多機能な分だけ習得に時間がかかるかもしれません。最近のパソコンだと軽快に動作します。\nInkscape.org Drawio おすすめ。使い方も直感的で，動作も軽快です。手書きっぽい図を作成することもできます。PCにインストールして使うこともできますが，オンライン版はブラウザ上で動きます。データはGoogle Driveに保存されます。\nファイル形式は独自形式かsvgです。とくに違いはないので，svgで保存しておけば良いと思います。また，PDFへの変換も可能です。\nDrawio オンライン版・・・Google Driveのダイアログが表示されますが，×を押せばスキップして開始できます（もちろん，作図後にGoogle Driveに保存できます）。メニューのHelpからGet Desktopでデスクトップ版をダウンロード可能です。 Gnuplot おすすめ。グラフ作成の定番ソフトです。簡単なスクリプトを覚えればすぐに使えるようになります。データからグラフを作成するだけではなく，関数のグラフを描くことも可能です。3Dグラフも描くことができます。\nグラフの出力は，画面，png，svg，pdfなどほとんど何でも選択可能です。\ngnuplot homepage "},{"id":17,"href":"/public/for-students/data/","title":"卒業論文のためのデータ収集","parent":"For students","content":" 研究のはじめ方 卒業論文で実証分析を行うために重要なのは，仮説とデータです。 仮説というのは，何を確かめたいのか，何を主張したいのかということです。 たとえば，「最低賃金の上昇により若年労働者の失業率が上がる」とか， 「緊急事態宣言は感染の抑制には効果がある」といった仮説を立てることから研究がスタートします。\n仮説を立てるときに気をつけなければいけないことがいくつかあります。 一つは，自分がその仮説について本当に重要だと考えているか，あるいは面白いと思っているかということです。 何かを研究して論文を執筆するということは，山あり谷ありの大変な仕事です。 ですから，まず自分が楽しんで研究できるようなテーマを選ぶことが重要です。\nもう一つは，自分が立てた仮説は，正しいか否かを判断できるものかどうかということです。 たとえば，「女性の社会進出について」や，「コロナ後の社会のあり方」などといったテーマは， もちろん重要ではありますが，何を明らかにしようとしているかわかりません。 また，仮説を検証するためのデータや方法があるかどうかも考える必要があります。 （この点については，なかなか自分だけではわからないことも多いので， 指導教員に相談しましょう）\n手当たり次第調べたことをまとめるというのでは論文にはならないので， 焦点を絞って具体的にどのような仮説をどのように検証するかという見通しを立てましょう。\nデータの探し方 仮説を立てたら，次にそれを立証するためのデータを集めます。 残念ながらどのようなデータも簡単に手に入るというわけではありません。 逆に言えばデータを手に入れることができれば，あとは決められた手続きで分析を進めることができるので， 研究としてはかなり進んだということができます。\n建前としては，仮説を立てた後にそれを検証するためのデータを探すというのが手順ですが， いろいろなデータを眺めながら検証できそうな仮説を考えるというのも一つの方法です。\n以下によく使われるデータをいくつか紹介しますので，まずは一覧してみましょう。 これから知らない地に足を踏み入れるための地図とコンパスになるはずです。\n公的データ まず，公的なデータを見ておくことが重要です。 政府はさまざまな調査を行ってそのデータを公表しています。 データはe-stat（政府統計の総合窓口）というWebサイトに集約されていて， だれでもアクセスできるようになっています。\nまずはe-statにアクセスして，キーワード検索を行うか， 分野別のページで使えるデータがないか探してみましょう。\ne-statではExcel形式のファイルをダウンロードできるほか， Web上でデータベースを操作して表を作成することも可能です。 また，RやPythonを使えば，APIを用いて大量のデータを自動的に一括取込することも可能です。\nまた，総務省統計局が毎年，『日本統計年鑑』や『日本の統計』，『世界の統計』という統計書を発行しています。さまざまなデータがテーマ別にまとめられていますので，使いやすいと思います。内容はすべてWebで公開されていますので，だれでもアクセス可能です。\nSSJDA 人々の行動について分析する際には，調査に対して各個人がどのように答えているかがわかった方が良いことは多くあります。そのようなデータのことを個票データといいます。\n海外では，個票データが公開されていて，だれでも研究目的で利用できる場合が多いのですが，日本では個票データの利用には大きな制限があります。公的データは集計データしか公開されませんので，個票データを用いた分析はできません（もちろん，集計データを用いてもさまざまな研究は可能です）。\n東京大学社会科学研究所の社会調査・データアーカイブ研究センターが提供しているSSJDAは，学生でも比較的簡単に利用できる調査データのアーカイブです。1500件近い調査データが登録されていて，申請すれば個票データを利用できます（ただし，学生は利用不可となっているデータもあります）。利用申請が必要なので，いろいろなデータを借りて試してみるということはできませんが，論文のテーマが決まれば，まずはこのアーカイブをチェックしてみると良いでしょう。\n申請してデータが利用できるようになるまでに，それほど時間はかかりません（データにもよると思います）が，利用したい場合には早めに申請した方が良いでしょう。\nスポーツのデータ 正確で詳細なデータを入手できるのがスポーツです。社会科学の分野でもスポーツのデータを用いた研究はよく行われています。相撲に八百長があることを示したスティーブン・レビット（『ヤバい経済学』の著者）という経済学者の論文は，世界で最も権威のある経済学分野の学術誌の一つであるAmerican Economic Reviewに掲載されました。\nプロ野球は細かいスコアブックなども手に入るようです。競輪や競艇については，全レースの結果が入手可能です。\n","description":"研究のはじめ方 卒業論文で実証分析を行うために重要なのは，仮説とデータです。 仮説というのは，何を確かめたいのか，何を主張したいのかということです。 たとえば，「最低賃金の上昇により若年労働者の失業率が上がる」とか， 「緊急事態宣言は感染の抑制には効果がある」といった仮説を立てることから研究がスタートします。\n仮説を立てるときに気をつけなければいけないことがいくつかあります。 一つは，自分がその仮説について本当に重要だと考えているか，あるいは面白いと思っているかということです。 何かを研究して論文を執筆するということは，山あり谷ありの大変な仕事です。 ですから，まず自分が楽しんで研究できるようなテーマを選ぶことが重要です。\nもう一つは，自分が立てた仮説は，正しいか否かを判断できるものかどうかということです。 たとえば，「女性の社会進出について」や，「コロナ後の社会のあり方」などといったテーマは， もちろん重要ではありますが，何を明らかにしようとしているかわかりません。 また，仮説を検証するためのデータや方法があるかどうかも考える必要があります。 （この点については，なかなか自分だけではわからないことも多いので， 指導教員に相談しましょう）\n手当たり次第調べたことをまとめるというのでは論文にはならないので， 焦点を絞って具体的にどのような仮説をどのように検証するかという見通しを立てましょう。\nデータの探し方 仮説を立てたら，次にそれを立証するためのデータを集めます。 残念ながらどのようなデータも簡単に手に入るというわけではありません。 逆に言えばデータを手に入れることができれば，あとは決められた手続きで分析を進めることができるので， 研究としてはかなり進んだということができます。\n建前としては，仮説を立てた後にそれを検証するためのデータを探すというのが手順ですが， いろいろなデータを眺めながら検証できそうな仮説を考えるというのも一つの方法です。\n以下によく使われるデータをいくつか紹介しますので，まずは一覧してみましょう。 これから知らない地に足を踏み入れるための地図とコンパスになるはずです。\n公的データ まず，公的なデータを見ておくことが重要です。 政府はさまざまな調査を行ってそのデータを公表しています。 データはe-stat（政府統計の総合窓口）というWebサイトに集約されていて， だれでもアクセスできるようになっています。\nまずはe-statにアクセスして，キーワード検索を行うか， 分野別のページで使えるデータがないか探してみましょう。\ne-statではExcel形式のファイルをダウンロードできるほか， Web上でデータベースを操作して表を作成することも可能です。 また，RやPythonを使えば，APIを用いて大量のデータを自動的に一括取込することも可能です。\nまた，総務省統計局が毎年，『日本統計年鑑』や『日本の統計』，『世界の統計』という統計書を発行しています。さまざまなデータがテーマ別にまとめられていますので，使いやすいと思います。内容はすべてWebで公開されていますので，だれでもアクセス可能です。\nSSJDA 人々の行動について分析する際には，調査に対して各個人がどのように答えているかがわかった方が良いことは多くあります。そのようなデータのことを個票データといいます。\n海外では，個票データが公開されていて，だれでも研究目的で利用できる場合が多いのですが，日本では個票データの利用には大きな制限があります。公的データは集計データしか公開されませんので，個票データを用いた分析はできません（もちろん，集計データを用いてもさまざまな研究は可能です）。\n東京大学社会科学研究所の社会調査・データアーカイブ研究センターが提供しているSSJDAは，学生でも比較的簡単に利用できる調査データのアーカイブです。1500件近い調査データが登録されていて，申請すれば個票データを利用できます（ただし，学生は利用不可となっているデータもあります）。利用申請が必要なので，いろいろなデータを借りて試してみるということはできませんが，論文のテーマが決まれば，まずはこのアーカイブをチェックしてみると良いでしょう。\n申請してデータが利用できるようになるまでに，それほど時間はかかりません（データにもよると思います）が，利用したい場合には早めに申請した方が良いでしょう。\nスポーツのデータ 正確で詳細なデータを入手できるのがスポーツです。社会科学の分野でもスポーツのデータを用いた研究はよく行われています。相撲に八百長があることを示したスティーブン・レビット（『ヤバい経済学』の著者）という経済学者の論文は，世界で最も権威のある経済学分野の学術誌の一つであるAmerican Economic Reviewに掲載されました。\nプロ野球は細かいスコアブックなども手に入るようです。競輪や競艇については，全レースの結果が入手可能です。"},{"id":18,"href":"/public/for-students/email/","title":"Emailを書くときに気をつけたいこと","parent":"For students","content":" はじめに 学生のみなさんはすでに就職活動や，友人，教員などとの連絡手段としてeメールを利用していると思います。Eメールはとても便利ですが，ルールやマナーを守った上で利用することが重要です。eメールは日常的に用いられるビジネス・ツールなので，そのルールやマナーを知らない人は，仕事ができない人と判断されてしまう可能性があります。良い仕事に就けるチャンスを逃してしまうことがないよう，普段からルールを守ってeメールを利用するよう心がけましょう。\nまた，コンピュータ・ウィルスの多くは，eメールやその添付ファイルを介して感染します。そのため，情報セキュリティに関する意識が高い社会人は，差出人名や件名が書かれていないメールを開いたりしませんし，もちろん返信したりもしません。そもそもそのようなメールは，スパム・メールのフィルタに引っかかって届かないことも多くあります。学生のみなさんがeメールに関するルールを遵守しなければいけないのは，メールを受け取る相手に悪い印象を与えないためでもあるのですが，それ以前に相手に確実にメールを読んでもらうようにするためでもあります。\n一方で，インターネットで検索すれば，ビジネス・メールの書き方やマナーについてのページがたくさんヒットして，それぞれ書いてあることが違うことも多くあります。また，気になるポイントも人によって違うので，ここではどのような場合でも気をつけておいた方が良いことを説明します。\nフリーメールやキャリアメールは使わない どうしても必要な場合を除いては，フリーメール（Yahoo!メールやHotmailなど）や携帯電話のキャリアメール（@docomo.ne.jpや@ezweb.ne.jp，@softbank.ne.jp）からメールを送るのはやめましょう。\n最大の理由は，Yahoo!メールなどのフリーメールやキャリアメールは，差出人が誰であるのかを明確にできないからです。メールアドレスを見ても所属がわかりませんし，メールに名前が書かれていてもそれが本当の名前かどうかもわかりません。そのような匿名性を利用して，迷惑メールの多くはフリーメールやキャリアメールのアドレスから送られています。そのため，フリーメールやキャリアメールから送られてきたメールを開かないようにしている人もいます。\n大学が発行したメールアドレス（@××××.ac.jp）であれば，確実にその大学の学生から送られてきたメールだということが相手にわかります。授業やゼミに関する連絡はもちろんですが，とくに就職活動など学外の社会人と連絡を取る際には，大学のメールアドレスを利用してください。\nEメールの書き方に関するルール まず，形式的な要件として，以下の点に注意して下さい。\n件名を必ず書く･･･簡潔でわかりやすい件名を書くこと。空白のままだとスパム・メールと判断される。 本文の冒頭に必ず宛名を書く･･･「○○様」，「○○先生」など。宛名がないと不特定多数に送信されたスパム・メールと判断される。 自分の所属・氏名を明らかにする…メールの最後に署名を入れている場合でも，最初に自分の所属・氏名を明らかにするのがマナー。 また，Eメールの文章に特有のルールとして，以下の点にも気を配って下さい。\n一文ごとに改行する･･･「。」で一文が終わったら必ず改行する。また，一文が長く（全角35～40字程度以上）なるときには，文章の途中でも改行する。 段落の間は一行あける･･･Eメールでは空白の行で段落を区切る。段落のはじめを字下げする必要はない。 半角カタカナや機種依存文字を使わない･･･絵文字などは論外。 以上のルールに則って，授業に関する質問をするために教員の研究室を訪問したい旨を伝えるメールを作成してみましょう。\n件名　：　木曜3限　基礎経済学の授業に関する質問 本文　： ○○先生 ××学部1年の○○　○○です。 いつもお世話になっています。 木曜3限の基礎経済学の授業を履修しています。 □□□□□□に関して質問があるのですが， ○月△日15:00に研究室にうかがってもよろしいでしょうか。 ********************** ◇◇大学××学部 ○○　○○ ********************** メールを書く際に気をつけること 大事なメールはパソコンで書く スマホ操作に慣れている人は，携帯電話でもPCと同じようにメールを書くことができると思っているかもしれません。しかし，スマホを使ってメールを書くことは薦められません。誤字・脱字が増える可能性が高いし，画面が小さいため書いた後にメール全体を眺めながら文章をチェックすることができないからです。緊急の場合を除いて，大事なメールはパソコンで書くようにしましょう。\nメールをやりとりする回数が必要最小限になるように メールは，チャットのように何度もやりとりするものではありません。相手からの返信が必要な場合には，なるべく相手が一度返信すれば完了するようにメールを書いてください。返信が来たときに，それに対してまた別の質問を返信するといったことは避けましょう。ただし，お礼のメールは送っておいた方が良いと思います。\nメールを送信する前に 最近では携帯電話などを使って，どこからでも簡単にメールを送信できるようになりました。しかし，Eメールは一度送信してしまうと取り消すことはできないので，送信ボタンを押す前に文章に誤字や脱字，文法の誤りがないかを良く確認して下さい。また，メールを受け取る相手も暇ではないので，メールで聞くことが適切な用件であるかをもう一度よく考えてください。メールは手軽に送ることができるからといって，自分で調べればわかることや自分の責任で聞き漏らしたことなどを問い合わせるのは迷惑ですし，間違いなくあなたに対する評価は下がってしまいます。\n","description":"はじめに 学生のみなさんはすでに就職活動や，友人，教員などとの連絡手段としてeメールを利用していると思います。Eメールはとても便利ですが，ルールやマナーを守った上で利用することが重要です。eメールは日常的に用いられるビジネス・ツールなので，そのルールやマナーを知らない人は，仕事ができない人と判断されてしまう可能性があります。良い仕事に就けるチャンスを逃してしまうことがないよう，普段からルールを守ってeメールを利用するよう心がけましょう。\nまた，コンピュータ・ウィルスの多くは，eメールやその添付ファイルを介して感染します。そのため，情報セキュリティに関する意識が高い社会人は，差出人名や件名が書かれていないメールを開いたりしませんし，もちろん返信したりもしません。そもそもそのようなメールは，スパム・メールのフィルタに引っかかって届かないことも多くあります。学生のみなさんがeメールに関するルールを遵守しなければいけないのは，メールを受け取る相手に悪い印象を与えないためでもあるのですが，それ以前に相手に確実にメールを読んでもらうようにするためでもあります。\n一方で，インターネットで検索すれば，ビジネス・メールの書き方やマナーについてのページがたくさんヒットして，それぞれ書いてあることが違うことも多くあります。また，気になるポイントも人によって違うので，ここではどのような場合でも気をつけておいた方が良いことを説明します。\nフリーメールやキャリアメールは使わない どうしても必要な場合を除いては，フリーメール（Yahoo!メールやHotmailなど）や携帯電話のキャリアメール（@docomo.ne.jpや@ezweb.ne.jp，@softbank.ne.jp）からメールを送るのはやめましょう。\n最大の理由は，Yahoo!メールなどのフリーメールやキャリアメールは，差出人が誰であるのかを明確にできないからです。メールアドレスを見ても所属がわかりませんし，メールに名前が書かれていてもそれが本当の名前かどうかもわかりません。そのような匿名性を利用して，迷惑メールの多くはフリーメールやキャリアメールのアドレスから送られています。そのため，フリーメールやキャリアメールから送られてきたメールを開かないようにしている人もいます。\n大学が発行したメールアドレス（@××××.ac.jp）であれば，確実にその大学の学生から送られてきたメールだということが相手にわかります。授業やゼミに関する連絡はもちろんですが，とくに就職活動など学外の社会人と連絡を取る際には，大学のメールアドレスを利用してください。\nEメールの書き方に関するルール まず，形式的な要件として，以下の点に注意して下さい。\n件名を必ず書く･･･簡潔でわかりやすい件名を書くこと。空白のままだとスパム・メールと判断される。 本文の冒頭に必ず宛名を書く･･･「○○様」，「○○先生」など。宛名がないと不特定多数に送信されたスパム・メールと判断される。 自分の所属・氏名を明らかにする…メールの最後に署名を入れている場合でも，最初に自分の所属・氏名を明らかにするのがマナー。 また，Eメールの文章に特有のルールとして，以下の点にも気を配って下さい。\n一文ごとに改行する･･･「。」で一文が終わったら必ず改行する。また，一文が長く（全角35～40字程度以上）なるときには，文章の途中でも改行する。 段落の間は一行あける･･･Eメールでは空白の行で段落を区切る。段落のはじめを字下げする必要はない。 半角カタカナや機種依存文字を使わない･･･絵文字などは論外。 以上のルールに則って，授業に関する質問をするために教員の研究室を訪問したい旨を伝えるメールを作成してみましょう。\n件名　：　木曜3限　基礎経済学の授業に関する質問 本文　： ○○先生 ××学部1年の○○　○○です。 いつもお世話になっています。 木曜3限の基礎経済学の授業を履修しています。 □□□□□□に関して質問があるのですが， ○月△日15:00に研究室にうかがってもよろしいでしょうか。 ********************** ◇◇大学××学部 ○○　○○ ********************** メールを書く際に気をつけること 大事なメールはパソコンで書く スマホ操作に慣れている人は，携帯電話でもPCと同じようにメールを書くことができると思っているかもしれません。しかし，スマホを使ってメールを書くことは薦められません。誤字・脱字が増える可能性が高いし，画面が小さいため書いた後にメール全体を眺めながら文章をチェックすることができないからです。緊急の場合を除いて，大事なメールはパソコンで書くようにしましょう。\nメールをやりとりする回数が必要最小限になるように メールは，チャットのように何度もやりとりするものではありません。相手からの返信が必要な場合には，なるべく相手が一度返信すれば完了するようにメールを書いてください。返信が来たときに，それに対してまた別の質問を返信するといったことは避けましょう。ただし，お礼のメールは送っておいた方が良いと思います。\nメールを送信する前に 最近では携帯電話などを使って，どこからでも簡単にメールを送信できるようになりました。しかし，Eメールは一度送信してしまうと取り消すことはできないので，送信ボタンを押す前に文章に誤字や脱字，文法の誤りがないかを良く確認して下さい。また，メールを受け取る相手も暇ではないので，メールで聞くことが適切な用件であるかをもう一度よく考えてください。メールは手軽に送ることができるからといって，自分で調べればわかることや自分の責任で聞き漏らしたことなどを問い合わせるのは迷惑ですし，間違いなくあなたに対する評価は下がってしまいます。"},{"id":19,"href":"/public/for-students/report/","title":"レポート作成のTips","parent":"For students","content":" はじめに レポートの目的 レポートの形式的な要件 字数について 書式について 文章（日本語）のルール 参考文献 参考文献と剽窃行為 参考文献の示し方 書籍を参考にする場合 インターネット上の情報を参考にする場合 質の高いレポートを書くために レポートの構成 客観的な事実とそれにもとづく考察 読み直してから提出 参考になる文献など はじめに レポートを作成するということは，大学で身につけなければいけないアカデミック・スキルの中でも，最も重要なものの一つです。それは，単に大学を卒業するために必要というだけではなく，社会に出てからも役に立つスキルだからです。\nレポートを作成するということは，単に文章を書くということではありません。レポートでは，自分で情報や資料を収集したりそれらを評価して取捨選択したりしたうえで，要点を適切にまとめ読者にわかりやすく伝えることが求められています。また，内容はもちろんのこと，形式的なルールや指示を正しく理解して，それらを遵守して作成することもあわせて求められていると考えてください。\nレポートで高い評価を得るためには，特別な能力は必要ありません。以下の点に注意して丁寧に作業をすれば十分です。\n適切なテーマを選ぶ どの程度の分量や内容が求められているかを常識的に判断する（字数が○○字以内と指定されていればその8割以上，○○字程度と指定されていればそのプラスマイナス1割程度が目安です） 形式的なルールや指示を遵守して作成する ここでは，レポートを書く際に最低限知っておくべきことを説明します。\nレポートの目的 まず，大学の授業で教員がレポートや論文を課す主な目的は，以下の2つです。\n受講者が授業内容を理解しているかを判断する材料にする 授業内容に関連する問題を，自分で調べたり分析したりして報告することにより，理解を深めてもらう 1だけであれば試験で判断できるので，通常は両方が目的です。つまり，授業内容に即して作成するというだけではなく，自分でさらに詳しく調べることが必要です。レポートは成績評価に用いられるわけですから，受講者は自分が授業の内容を理解していることや，自分なりにさらに詳しく調べたということを，レポートの中でアピールしなければいけません。\nただし，レポートの内容は授業内容に基づいていることが前提です。授業を受けていなくても書くことができるようなレポートでは，授業内容を理解しているというアピールにはなりません。また，レポートは授業評価アンケートではないので，特別な指示がない限り授業の感想などを書く必要はありません。指示された内容以外のことを書くと，ネガティブに評価されると思ってください。\nレポートの形式的な要件 レポートの形式は，内容と同じくらい重要です。指示された形式が守られていなければ，大幅に減点されたり，提出したことが認められなかったりする可能性があります。\n最も大切なのは，指示をよく読んでからレポートを書くということです。レポートの課題によっては，それほど細かく形式が指定されないこともよくあります。しかし，指示がないということは，何でも良いという意味ではありません。暗黙のルールや常識にもとづいた形式でレポートを作成することが求められていると考えてください。\n字数について レポートはできるだけ簡潔にまとめるのが良いので，無駄に長く書く必要はありません。しかし，字数についての指示がある場合には，その指示に見合った内容が求められていると思ってください。\n字数については，○○字以内と指定されていればその7~8割以上，○○字程度と指定されていればそのプラスマイナス1割が目安です。また，A4用紙で○○枚というのは，1枚=1200字程度で文字数に換算して考えてください。\n文字のサイズを大きくしたり必要のない図表を挿入して枚数を無理に増やすようなことはやめてください。とくに指示がない限りは，A4用紙に横書きで1枚あたりの文字数は1200字（40字×30行，文字のサイズは10.5pt）程度で作成するのが常識です。\n書式について 以下はレポートの形式に関する常識的なルールです。特に指示がない場合には，これらのルールに従ってレポートを作成するようにしてください。\n表紙を作成し，タイトルや所属（学籍番号），氏名，提出日などを明記する 「表紙不要」と明示されていれば，1枚目の最初にタイトルや所属（学籍番号），氏名，提出日などを明記する ヘッダーとフッターを適切に設定する 各ページにページ番号を入れる(通常はページ下部) ヘッダーにタイトル，氏名を入れておくとよい 綴じてあったものがバラバラになっても，もとに戻せるように フォントを適切に設定する レポート全体で形式を統一する（途中でフォントや文字サイズなどを変えてはいけない） フォントは明朝体もしくはゴシック体，文字サイズは10.5～11pt 強調には，ボールド（太字），イタリック（斜体字），アンダーライン（下線）を用いる 漢字・かな（カナ）は全角，数字・アルファベットは半角を使う 印刷方法 片面印刷で左上をステープラーでとめて提出する 電子ファイルで提出する際には，原則としてPDFファイルとする 文章（日本語）のルール 正しく日本語の文章を書くということは，やはり社会人として最低限求められるスキルです。特に注意してほしいのは以下の点です。\n文体を統一する（「～です。」「～ます。」と，「～だ。」「～である。」を混ぜて使わない）\n→レポートに丁寧な言葉使いは必要ないので，基本的に「～だ。」「～である。」に統一する） 段落のはじめは一文字分の空白をあける\n→ＥメールやWebサイトのように，段落と段落の間に空白の行は入れない また，レポートや論文などの文章には，小説やエッセイなどの文章とは異なるルールがあります。\n主語を省略しない（日本語の文章は主語がなくても通じることが多いが，レポートでは回りくどく感じても主語を省略せず書く） 一文をあまり長くしない（何行にもわたるような文章は途中で区切る） 適切な場所に句読点を打つ とくに，主語を省略せずに書くことが重要です。一文ごとに主述関係を明確に意識することでわかりやすい文章を書くことができるようになります。そのため，体言止めや倒置などの修辞法を使うことは避けてください。求められているのは，論理的でわかりやすい簡潔な文章であり，文学的な言い回しなどは必要ありません。また，レポートは議論を展開するものなので，必要以上に箇条書きを使わないようにしてください（全体が箇条書きになっているようなレポートは論外です）。\n参考文献 レポートには，自分で調べるということが求められているわけですから，参考文献が必要です。参考文献がひとつもないということは，何も調べていないということですから，レポートとしては失格です。また，実際には参考にした文献を明記しないと剽窃行為になってしまいますので，十分に注意してください。\n参考文献と剽窃行為 レポートを書くに当たって，みなさんは様々な図書や新聞記事，インターネット上の情報などを利用すると思います。もちろん，レポートにはそのような情報収集を行うことが求められています。しかし，その際には，調べたことを書き写したりまとめたりする部分と自分の考察の部分とを明確に区別する必要があります。他人が書いた文章を無断でそのまま引用したり，まとめて自分の主張のように書いたりすることは，剽窃行為です。剽窃行為は研究者（学生のみなさんもレポートや卒業論文を書くわけですから研究者とみなされます）としては最も恥ずべき行為であり，場合によっては犯罪となります。\n注意しなければいけないのは，他人の書いた文章を引用したり参考にしたりする場合はルールに則って行う必要があり，そのルールが守られていない場合には，本人が意図していなくても剽窃行為として罰せられることがあるということです。\n最近大きな問題になっているのが，インターネット上の文章をそのままレポートにコピー・貼り付けしてあたかも自分の書いた文章のように見せかけてレポートを作成する「コピペ」です。このような行為は当然のことながら不正行為であり，試験でカンニングを行った場合と同様に厳しく罰せられます。場合によっては，留年や停学という処分が下される可能性もあります。付け加えておきたいのは，コピペで作成したようなレポートを提出すると，言い逃れができない証拠が残るということです。証拠というのは，いうまでもなくレポートそのものです。不正行為と認定された場合，大きなものを失うことになりますので，そのようなレポートを提出することは絶対にやめてください。\n剽窃行為は思った以上に簡単に発見されます。剽窃があった場合にはレポートの文章をGoogleで検索すればヒットしますし，インターネットに同じ文章や似たような文章がないかどうかということや，提出者の間で内容や文章の似通ったレポートがないかを自動的にチェックするソフトもあります。剽窃行為はリスクが大きくメリットが少ないということを理解してください。\n参考文献の示し方 他人の文章を引用する際にはさまざまな作法がありますが，最も簡単なのは，レポートの中で他人の文章を参考にしたり引用したりした部分に，注を付けて出典を明記するということです。\nまず，他人の文章をそのまま引用する際には，引用符「」で囲んで注を付けます。\nこれについて，○○○○は「□□□□」であると述べている(注1)。 そのまま引用しない場合でも，他人の意見や文章をまとめたりした部分にも注を付けます。\n一方，△△△△は○○○○の主張に対して，××××××と批判している(注2)。 それほど注の数が多くなければ，該当するページに脚注を挿入します。注の数が多くなると脚注ではバランスが悪いので，文末注とします。\n書籍を参考にする場合 注に何を書くかということは，参考にした文献の種類によって異なります。書籍であれば，著者名・書名・出版年・出版社・参考にしたページ番号が必須項目です。\n1　○○○○著，『■■■■』，2010年，大阪出版，36ページ 2　△△△△著，『××××』，2011年，上新庄出版，328ページ インターネット上の情報を参考にする場合 基本的にインターネット上の情報を参考にレポートを書くことはおすすめできません。それは，ウェブページと書籍は以下の点で異なっているからです。\n書籍は著者が記されているため誰が書いたものなのかが明確だが，インターネット上の情報は多くの場合，文責が誰にあるのかが明確でない 書籍の内容は変更されることはないが，インターネット上の情報は書き換えられたり削除されたりすることがある まず，誰によって書かれているのかがわからないような文章は，参考にするべきではありません。たとえば，Wikipediaは非常に便利ですが，記事は匿名で誰でも編集することができるようになっており，頻繁に間違った記述がみられます。そのため，レポートの参考文献としてWikipediaは不適切です。Wikipediaでも信用できる記事には必ず出典が明記されているので，その一次資料を調べてみるようにしましょう。同様の理由で，Yahoo!知恵袋などの掲示板も参考文献としては不適切です。これらのウェブページを参考文献に挙げているだけで，減点されることもあると思ってください。\nもちろん，インターネットには最新の情報がいち早く掲載されるという大きな利点もあります。そのため，場合によってはレポートを書くためにインターネット上の情報を参考にする必要があるかもしれません。そのような場合には，まずインターネット以外に同じ情報を掲載した書籍などがないかを確認してみてください（多くの場合，政府機関の資料や白書はホームページに載っているだけでなく，刊本があります）。その上で，どうしてもインターネット上の情報を参考にレポートを書く場合には，以下の点に十分に注意してください。\n情報が信用できるものかを確認する（誰が書いた記事なのか，その人物や団体は信頼できるか） URLだけでなく，著者名，文章のタイトル，アクセスした日時などを示す 特に，2には注意してください。参考文献として数行にもわたるようなURLだけを貼り付けてくる人がいますが，URLだけでは一見してどのような資料なのかがわかりませんし，読者がそのURLを一字一句間えずにブラウザに打ち込んでくれるということはまったく期待できません。参考文献として取り上げたものを，レポートを読む人が閲覧できなければ意味がないので，できるだけ詳細な情報を記載してください。\n上記のような点に十分に注意を払ったとしても，やはりブログや掲示板，twitterなどは参考文献としては適切であるとはいえません。レポートには，図書館に足を運ぶことも求められていると考えてください。\n質の高いレポートを書くために レポートの構成 文章を書き始める前に，レポートの構成をよく吟味することが重要です。議論の展開がわかりやすいように章立てを行い，各章の内容と章と章とのつながりを考えましょう。ごく短いレポートの場合は章立てをする必要はありませんが，事前に議論の展開を考える必要があることには変わりありません。\n章立てをしたら，どの章から書いていくかを考えます。レポートの「はじめに」は，最後に書くことをおすすめします。「はじめに」は自分のレポートをわかりやすく説明してアピールする導入部分なので，ほかの部分が完成してからでなければ書くことができないからです。\n客観的な事実とそれにもとづく考察 レポートは感想文や作文とは違います。最も大きな違いは，感想文や作文では自分がどのように思っているかを書くことが求められているのに対して，レポートでは調べてきた客観的な事実や分析結果とそれにもとづく考察を書くことが求められているということです。\nレポートでは，論拠がない意見や感想，飛躍した結論は必要ありません。もちろん，これはレポートに自分の主張や意見を書いてはいけないということではありません。主張や意見は調査した事実と考察にもとづいて展開される必要があり，論拠を示さず自分の意見だけを書くのではレポートにはならないということです。\n読み直してから提出 レポートは，提出する前に必ず最初から最後まで通して読み直しましょう。自分で書いた文章は，先入観があるため，間違いがあってもなかなか気がつきません。そのため，書き終わって数日から一週間程度たってから読み直すのが効果的です。また，友達同士でレポートを読みあうというのも有益です。\n参考になる文献など 以下は，他大学のリソースですが，非常に参考になります。\n慶應義塾大学　教養研究センターのアカデミック・スキルズ ","description":"はじめに レポートの目的 レポートの形式的な要件 字数について 書式について 文章（日本語）のルール 参考文献 参考文献と剽窃行為 参考文献の示し方 書籍を参考にする場合 インターネット上の情報を参考にする場合 質の高いレポートを書くために レポートの構成 客観的な事実とそれにもとづく考察 読み直してから提出 参考になる文献など はじめに レポートを作成するということは，大学で身につけなければいけないアカデミック・スキルの中でも，最も重要なものの一つです。それは，単に大学を卒業するために必要というだけではなく，社会に出てからも役に立つスキルだからです。\nレポートを作成するということは，単に文章を書くということではありません。レポートでは，自分で情報や資料を収集したりそれらを評価して取捨選択したりしたうえで，要点を適切にまとめ読者にわかりやすく伝えることが求められています。また，内容はもちろんのこと，形式的なルールや指示を正しく理解して，それらを遵守して作成することもあわせて求められていると考えてください。\nレポートで高い評価を得るためには，特別な能力は必要ありません。以下の点に注意して丁寧に作業をすれば十分です。\n適切なテーマを選ぶ どの程度の分量や内容が求められているかを常識的に判断する（字数が○○字以内と指定されていればその8割以上，○○字程度と指定されていればそのプラスマイナス1割程度が目安です） 形式的なルールや指示を遵守して作成する ここでは，レポートを書く際に最低限知っておくべきことを説明します。\nレポートの目的 まず，大学の授業で教員がレポートや論文を課す主な目的は，以下の2つです。\n受講者が授業内容を理解しているかを判断する材料にする 授業内容に関連する問題を，自分で調べたり分析したりして報告することにより，理解を深めてもらう 1だけであれば試験で判断できるので，通常は両方が目的です。つまり，授業内容に即して作成するというだけではなく，自分でさらに詳しく調べることが必要です。レポートは成績評価に用いられるわけですから，受講者は自分が授業の内容を理解していることや，自分なりにさらに詳しく調べたということを，レポートの中でアピールしなければいけません。\nただし，レポートの内容は授業内容に基づいていることが前提です。授業を受けていなくても書くことができるようなレポートでは，授業内容を理解しているというアピールにはなりません。また，レポートは授業評価アンケートではないので，特別な指示がない限り授業の感想などを書く必要はありません。指示された内容以外のことを書くと，ネガティブに評価されると思ってください。\nレポートの形式的な要件 レポートの形式は，内容と同じくらい重要です。指示された形式が守られていなければ，大幅に減点されたり，提出したことが認められなかったりする可能性があります。\n最も大切なのは，指示をよく読んでからレポートを書くということです。レポートの課題によっては，それほど細かく形式が指定されないこともよくあります。しかし，指示がないということは，何でも良いという意味ではありません。暗黙のルールや常識にもとづいた形式でレポートを作成することが求められていると考えてください。\n字数について レポートはできるだけ簡潔にまとめるのが良いので，無駄に長く書く必要はありません。しかし，字数についての指示がある場合には，その指示に見合った内容が求められていると思ってください。\n字数については，○○字以内と指定されていればその7~8割以上，○○字程度と指定されていればそのプラスマイナス1割が目安です。また，A4用紙で○○枚というのは，1枚=1200字程度で文字数に換算して考えてください。\n文字のサイズを大きくしたり必要のない図表を挿入して枚数を無理に増やすようなことはやめてください。とくに指示がない限りは，A4用紙に横書きで1枚あたりの文字数は1200字（40字×30行，文字のサイズは10.5pt）程度で作成するのが常識です。\n書式について 以下はレポートの形式に関する常識的なルールです。特に指示がない場合には，これらのルールに従ってレポートを作成するようにしてください。\n表紙を作成し，タイトルや所属（学籍番号），氏名，提出日などを明記する 「表紙不要」と明示されていれば，1枚目の最初にタイトルや所属（学籍番号），氏名，提出日などを明記する ヘッダーとフッターを適切に設定する 各ページにページ番号を入れる(通常はページ下部) ヘッダーにタイトル，氏名を入れておくとよい 綴じてあったものがバラバラになっても，もとに戻せるように フォントを適切に設定する レポート全体で形式を統一する（途中でフォントや文字サイズなどを変えてはいけない） フォントは明朝体もしくはゴシック体，文字サイズは10.5～11pt 強調には，ボールド（太字），イタリック（斜体字），アンダーライン（下線）を用いる 漢字・かな（カナ）は全角，数字・アルファベットは半角を使う 印刷方法 片面印刷で左上をステープラーでとめて提出する 電子ファイルで提出する際には，原則としてPDFファイルとする 文章（日本語）のルール 正しく日本語の文章を書くということは，やはり社会人として最低限求められるスキルです。特に注意してほしいのは以下の点です。\n文体を統一する（「～です。」「～ます。」と，「～だ。」「～である。」を混ぜて使わない）\n→レポートに丁寧な言葉使いは必要ないので，基本的に「～だ。」「～である。」に統一する） 段落のはじめは一文字分の空白をあける\n→ＥメールやWebサイトのように，段落と段落の間に空白の行は入れない また，レポートや論文などの文章には，小説やエッセイなどの文章とは異なるルールがあります。\n主語を省略しない（日本語の文章は主語がなくても通じることが多いが，レポートでは回りくどく感じても主語を省略せず書く） 一文をあまり長くしない（何行にもわたるような文章は途中で区切る） 適切な場所に句読点を打つ とくに，主語を省略せずに書くことが重要です。一文ごとに主述関係を明確に意識することでわかりやすい文章を書くことができるようになります。そのため，体言止めや倒置などの修辞法を使うことは避けてください。求められているのは，論理的でわかりやすい簡潔な文章であり，文学的な言い回しなどは必要ありません。また，レポートは議論を展開するものなので，必要以上に箇条書きを使わないようにしてください（全体が箇条書きになっているようなレポートは論外です）。\n参考文献 レポートには，自分で調べるということが求められているわけですから，参考文献が必要です。参考文献がひとつもないということは，何も調べていないということですから，レポートとしては失格です。また，実際には参考にした文献を明記しないと剽窃行為になってしまいますので，十分に注意してください。\n参考文献と剽窃行為 レポートを書くに当たって，みなさんは様々な図書や新聞記事，インターネット上の情報などを利用すると思います。もちろん，レポートにはそのような情報収集を行うことが求められています。しかし，その際には，調べたことを書き写したりまとめたりする部分と自分の考察の部分とを明確に区別する必要があります。他人が書いた文章を無断でそのまま引用したり，まとめて自分の主張のように書いたりすることは，剽窃行為です。剽窃行為は研究者（学生のみなさんもレポートや卒業論文を書くわけですから研究者とみなされます）としては最も恥ずべき行為であり，場合によっては犯罪となります。\n注意しなければいけないのは，他人の書いた文章を引用したり参考にしたりする場合はルールに則って行う必要があり，そのルールが守られていない場合には，本人が意図していなくても剽窃行為として罰せられることがあるということです。"},{"id":20,"href":"/public/categories/","title":"Categories","parent":"Tomokazu NOMURA's Web Page","content":"","description":""},{"id":21,"href":"/public/PC/","title":"PC Tips","parent":"Tomokazu NOMURA's Web Page","content":"","description":""},{"id":22,"href":"/public/statistics/","title":"Rによる公的統計の視覚化","parent":"Tomokazu NOMURA's Web Page","content":" はじめに 経済にかかわる公的統計を，Rを使って視覚化(グラフ化)する例を紹介する。データのダウンロード，整理，グラフの作成をすべてR上で行っているので，コードをコピーして貼り付けるだけで，グラフを作成できる。\nデータについては，e-Statからダウンロードする。APIで提供されているデータについてはAPIを利用するが，ファイルでしか提供されていないものは，Excel形式やcsv形式のファイルをダウンロードして整理する。グラフは，ggplot2を用いて描く。\nAPIを使うものについてはe-stat・APIのアプリケーションID取得が必要。アプリケーションIDはこちらから登録すればだれでも取得できる(無料)。\nわたし自身，Rは完全に独学で，体系的に学んだわけではないので，コードには非効率であったり読みにくかったりする部分もあると思う。\nこのサービスは、政府統計総合窓口(e-Stat)のAPI機能を使用していますが、サービスの内容は国によって保証されたものではありません。\ne-stat API？ APIは，Application Programming Interfaceの略。e-statでは欲しい情報をURLに埋め込んでアクセスすると，XMLやJSON，CSV形式のデータを取得できる。詳細はe-statのWebページを参照。利用は無料だが，アプリケーションIDを取得する必要がある。一度取得してしまえば，とくに更新などは必要ないみたい。\nExcelファイルなどで提供されているデータは，それぞれフォーマットが違うので作業の自動化が困難。一方，APIを使えば必要な情報を統計名 (ID)，期間，地域などを指定してダウンロードできる。データのフォーマットは統一されているので分析の自動化が容易。また，ファイルのようにデータ全体 (不要な部分まで) をダウンロードしてから絞り込むといった作業も不要。たとえば，「人口動態統計から2000年以降の合計特殊出生率を取得する」とか，「労働力調査から2000〜2010年の男女別失業率を取得する」といったことが簡単にできる。\n残念ながらe-statで提供されているデータの全てがAPIで取得できるわけではなく，Excelファイルでのみ提供されているデータも多い。また，同じ統計であっても，年が違うと統計表IDや変数のコードが違うこともあり，そのあたりは将来の改良に期待。とはいえ，csvファイルやExcelファイルをダウンロードして，整理・加工するという前処理が大幅に軽減されるため，非常にパワフルなツール。\nRからe-statのAPIを利用するときは，estatapiというパッケージが便利。\nちょっとやってみよう データの取得 e-stat APIの仕組みを理解するために，Rのestatapiパッケージからe-statのAPIを実際に使ってみる。ここでは，日本の出生数と合計特殊出生率のデータを取得しよう。「人口動態調査・人口動態統計・確定数・出生・4−1・上巻」の統計表IDは\u0026quot;0003411595\u0026quot;。とりあえず統計表IDだけ指定してデータをダウンロードしてみよう(すべてのデータがダウンロードされる)。\nlibrary(tidyverse) library(estatapi) appID = \u0026#34;取得したアプリケーションID\u0026#34; # e-Statからデータ取得 estat_vital \u0026lt;- estat_getStatsData( appId = appID, statsDataId = \u0026#34;0003411595\u0026#34;) ダウンロードしたデータがどのようなものか，glimpse()で確認してみる。\nglimpse(estat_vital) Rows: 720 Columns: 7 $ cat01_code \u0026lt;chr\u0026gt; \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;… $ `出生数・出生率・出生性比` \u0026lt;chr\u0026gt; \u0026#34;出生数_総数\u0026#34;, \u0026#34;出生数_総数\u0026#34;, \u0026#34;出生数_総数\u0026#34;, \u0026#34;出生数_総数\u0026#34;, \u0026#34;出生数_総数\u0026#34;, \u0026#34;出… $ time_code \u0026lt;chr\u0026gt; \u0026#34;2021000000\u0026#34;, \u0026#34;2020000000\u0026#34;, \u0026#34;2019000000\u0026#34;, \u0026#34;2018000000\u0026#34;, \u0026#34;2017000000\u0026#34;, \u0026#34;20160000… $ `時間軸(年次)` \u0026lt;chr\u0026gt; \u0026#34;2021年\u0026#34;, \u0026#34;2020年\u0026#34;, \u0026#34;2019年\u0026#34;, \u0026#34;2018年\u0026#34;, \u0026#34;2017年\u0026#34;, \u0026#34;2016年\u0026#34;, \u0026#34;2015年\u0026#34;, \u0026#34;2014年\u0026#34;,… $ unit \u0026lt;chr\u0026gt; \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;… $ value \u0026lt;dbl\u0026gt; 811622, 840835, 865239, 918400, 946146, 977242, 1005721, 1003609, 1029817, 1037… $ annotation \u0026lt;chr\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… データの構造はシンプルで，6種類のデータが120年分で合計720行ある。6種類というのは，出生数・出生率・出生性比で識別される。\ntable(estat_vital$`出生数・出生率・出生性比`) 出生性比 出生数_女 出生数_男 出生数_総数 出生率 合計特殊出生率 120 120 120 120 120 120 出生数・出生率・出生性比の内容は，cat01_codeと一対一で対応している。\ntable(estat_vital$`出生数・出生率・出生性比`, estat_vital$cat01_code) cat01_code 出生数・出生率・出生性比 00100 00110 00120 00130 00140 00150 出生性比 0 0 0 0 120 0 出生数_女 0 0 120 0 0 0 出生数_男 0 120 0 0 0 0 出生数_総数 120 0 0 0 0 0 出生率 0 0 0 120 0 0 合計特殊出生率 0 0 0 0 0 120 同様に，time_codeは時間軸(年次)と一対一で対応している。より複雑な構造のデータであれば，cat02_code, cat03_code，･･･といったように識別のための変数が増える。たとえば，cat01_codeがデータ系列，cat02_codeが性別，cat03_codeが年齢といったイメージ。また，この例は全国のデータだが，都道府県や市町村別のデータであればarea_codeという地域を識別するための変数が追加される。\nダウンロードするデータの限定 この例のデータであればサイズが小さいので，すべてダウンロードしてからフィルターをかけても良いが，通常は大きなデータをすべてダウンロードするのは非効率。そこで，必要なデータだけを取得する。たとえば，1965〜2020年の出生数_総数と合計特殊出生率だけを取得するには，以下のようにすれば良い。\nestat_vital \u0026lt;- estat_getStatsData( appId = appID, statsDataId = \u0026#34;0003411595\u0026#34;, cdCat01 = c(\u0026#34;00100\u0026#34;, \u0026#34;00150\u0026#34;), cdTimeFrom = \u0026#34;1965\u0026#34;, cdTimeTo = \u0026#34;2020\u0026#34; ) cdCat01 = c(\u0026quot;00100\u0026quot;, \u0026quot;00150\u0026quot;) の部分は出生数_総数および合計特殊出生率に対応するcat01_codeの00100と00150を指定している。cdTimeFrom = \u0026quot;1965\u0026quot;, cdTimeTo = \u0026quot;2020\u0026quot;の部分は1965〜2020年の時期を指定している。ほかに絞込みを指定できるもののリストは，e-statのマニュアルに掲載されている。\n","description":"はじめに 経済にかかわる公的統計を，Rを使って視覚化(グラフ化)する例を紹介する。データのダウンロード，整理，グラフの作成をすべてR上で行っているので，コードをコピーして貼り付けるだけで，グラフを作成できる。\nデータについては，e-Statからダウンロードする。APIで提供されているデータについてはAPIを利用するが，ファイルでしか提供されていないものは，Excel形式やcsv形式のファイルをダウンロードして整理する。グラフは，ggplot2を用いて描く。\nAPIを使うものについてはe-stat・APIのアプリケーションID取得が必要。アプリケーションIDはこちらから登録すればだれでも取得できる(無料)。\nわたし自身，Rは完全に独学で，体系的に学んだわけではないので，コードには非効率であったり読みにくかったりする部分もあると思う。\nこのサービスは、政府統計総合窓口(e-Stat)のAPI機能を使用していますが、サービスの内容は国によって保証されたものではありません。\ne-stat API？ APIは，Application Programming Interfaceの略。e-statでは欲しい情報をURLに埋め込んでアクセスすると，XMLやJSON，CSV形式のデータを取得できる。詳細はe-statのWebページを参照。利用は無料だが，アプリケーションIDを取得する必要がある。一度取得してしまえば，とくに更新などは必要ないみたい。\nExcelファイルなどで提供されているデータは，それぞれフォーマットが違うので作業の自動化が困難。一方，APIを使えば必要な情報を統計名 (ID)，期間，地域などを指定してダウンロードできる。データのフォーマットは統一されているので分析の自動化が容易。また，ファイルのようにデータ全体 (不要な部分まで) をダウンロードしてから絞り込むといった作業も不要。たとえば，「人口動態統計から2000年以降の合計特殊出生率を取得する」とか，「労働力調査から2000〜2010年の男女別失業率を取得する」といったことが簡単にできる。\n残念ながらe-statで提供されているデータの全てがAPIで取得できるわけではなく，Excelファイルでのみ提供されているデータも多い。また，同じ統計であっても，年が違うと統計表IDや変数のコードが違うこともあり，そのあたりは将来の改良に期待。とはいえ，csvファイルやExcelファイルをダウンロードして，整理・加工するという前処理が大幅に軽減されるため，非常にパワフルなツール。\nRからe-statのAPIを利用するときは，estatapiというパッケージが便利。\nちょっとやってみよう データの取得 e-stat APIの仕組みを理解するために，Rのestatapiパッケージからe-statのAPIを実際に使ってみる。ここでは，日本の出生数と合計特殊出生率のデータを取得しよう。「人口動態調査・人口動態統計・確定数・出生・4−1・上巻」の統計表IDは\u0026quot;0003411595\u0026quot;。とりあえず統計表IDだけ指定してデータをダウンロードしてみよう(すべてのデータがダウンロードされる)。\nlibrary(tidyverse) library(estatapi) appID = \u0026#34;取得したアプリケーションID\u0026#34; # e-Statからデータ取得 estat_vital \u0026lt;- estat_getStatsData( appId = appID, statsDataId = \u0026#34;0003411595\u0026#34;) ダウンロードしたデータがどのようなものか，glimpse()で確認してみる。\nglimpse(estat_vital) Rows: 720 Columns: 7 $ cat01_code \u0026lt;chr\u0026gt; \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;, \u0026#34;00100\u0026#34;… $ `出生数・出生率・出生性比` \u0026lt;chr\u0026gt; \u0026#34;出生数_総数\u0026#34;, \u0026#34;出生数_総数\u0026#34;, \u0026#34;出生数_総数\u0026#34;, \u0026#34;出生数_総数\u0026#34;, \u0026#34;出生数_総数\u0026#34;, \u0026#34;出… $ time_code \u0026lt;chr\u0026gt; \u0026#34;2021000000\u0026#34;, \u0026#34;2020000000\u0026#34;, \u0026#34;2019000000\u0026#34;, \u0026#34;2018000000\u0026#34;, \u0026#34;2017000000\u0026#34;, \u0026#34;20160000… $ `時間軸(年次)` \u0026lt;chr\u0026gt; \u0026#34;2021年\u0026#34;, \u0026#34;2020年\u0026#34;, \u0026#34;2019年\u0026#34;, \u0026#34;2018年\u0026#34;, \u0026#34;2017年\u0026#34;, \u0026#34;2016年\u0026#34;, \u0026#34;2015年\u0026#34;, \u0026#34;2014年\u0026#34;,… $ unit \u0026lt;chr\u0026gt; \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;人\u0026#34;, \u0026#34;… $ value \u0026lt;dbl\u0026gt; 811622, 840835, 865239, 918400, 946146, 977242, 1005721, 1003609, 1029817, 1037… $ annotation \u0026lt;chr\u0026gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… データの構造はシンプルで，6種類のデータが120年分で合計720行ある。6種類というのは，出生数・出生率・出生性比で識別される。"},{"id":23,"href":"/public/tags/","title":"Tags","parent":"Tomokazu NOMURA's Web Page","content":"","description":""}]